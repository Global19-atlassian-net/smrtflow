/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.pacbio.common.models.pipelines;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PipelineTemplate extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PipelineTemplate\",\"namespace\":\"com.pacbio.common.models.pipelines\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"entryPoints\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EntryPoint\",\"fields\":[{\"name\":\"entryId\",\"type\":\"string\",\"doc\":\"Entry Id\"},{\"name\":\"fileTypeId\",\"type\":\"string\",\"doc\":\"PacBio File Type identifier\"},{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Display Name\"}]}}},{\"name\":\"bindings\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PipelineBinding\",\"fields\":[{\"name\":\"in\",\"type\":{\"type\":\"record\",\"name\":\"InBinding\",\"fields\":[{\"name\":\"taskTypeId\",\"type\":\"string\",\"doc\":\"Task type (tool_contract_id)\"},{\"name\":\"index\",\"type\":\"int\",\"doc\":\"Positional index of Task Input\"},{\"name\":\"instanceId\",\"type\":\"int\",\"doc\":\"Task Type instance id. A pipeline can have multiple instances of the same task type.\"}]},\"doc\":\"Entry Id\"},{\"name\":\"out\",\"type\":{\"type\":\"record\",\"name\":\"OutBinding\",\"fields\":[{\"name\":\"taskTypeId\",\"type\":\"string\",\"doc\":\"Task type (tool_contract_id)\"},{\"name\":\"index\",\"type\":\"int\",\"doc\":\"Positional index of Task Output\"},{\"name\":\"instanceId\",\"type\":\"int\",\"doc\":\"Task Type instance id. A pipeline can have multiple instances of the same task type.\"}]},\"doc\":\"Display Name\"}]}}},{\"name\":\"taskOptions\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TaskOption\",\"fields\":[{\"name\":\"default\",\"type\":[\"int\",\"string\",\"boolean\",\"float\"]},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"optionTypeId\",\"type\":\"string\",\"doc\":\"Explicit pacbio option type id (e.g., pacbio.option_types.boolean). This must be consistent with the 'type' field\"}]}}},{\"name\":\"options\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"PipelineEngineOption\",\"doc\":\"Pipeline Level option. This should probably be converted to concrete values, not loose key-value pairs\",\"fields\":[{\"name\":\"default\",\"type\":[\"int\",\"string\",\"boolean\",\"float\"]},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"optionTypeId\",\"type\":\"string\",\"doc\":\"Explicit pacbio option type id (e.g., pacbio.option_types.boolean). This must be consistent with the 'type' field\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence description;
  @Deprecated public java.lang.CharSequence version;
  @Deprecated public java.util.List<java.lang.CharSequence> tags;
  @Deprecated public java.util.List<com.pacbio.common.models.pipelines.EntryPoint> entryPoints;
  @Deprecated public java.util.List<com.pacbio.common.models.pipelines.PipelineBinding> bindings;
  @Deprecated public java.util.List<com.pacbio.common.models.pipelines.TaskOption> taskOptions;
  @Deprecated public java.util.List<com.pacbio.common.models.pipelines.PipelineEngineOption> options;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PipelineTemplate() {}

  /**
   * All-args constructor.
   */
  public PipelineTemplate(java.lang.CharSequence id, java.lang.CharSequence name, java.lang.CharSequence description, java.lang.CharSequence version, java.util.List<java.lang.CharSequence> tags, java.util.List<com.pacbio.common.models.pipelines.EntryPoint> entryPoints, java.util.List<com.pacbio.common.models.pipelines.PipelineBinding> bindings, java.util.List<com.pacbio.common.models.pipelines.TaskOption> taskOptions, java.util.List<com.pacbio.common.models.pipelines.PipelineEngineOption> options) {
    this.id = id;
    this.name = name;
    this.description = description;
    this.version = version;
    this.tags = tags;
    this.entryPoints = entryPoints;
    this.bindings = bindings;
    this.taskOptions = taskOptions;
    this.options = options;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return description;
    case 3: return version;
    case 4: return tags;
    case 5: return entryPoints;
    case 6: return bindings;
    case 7: return taskOptions;
    case 8: return options;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: description = (java.lang.CharSequence)value$; break;
    case 3: version = (java.lang.CharSequence)value$; break;
    case 4: tags = (java.util.List<java.lang.CharSequence>)value$; break;
    case 5: entryPoints = (java.util.List<com.pacbio.common.models.pipelines.EntryPoint>)value$; break;
    case 6: bindings = (java.util.List<com.pacbio.common.models.pipelines.PipelineBinding>)value$; break;
    case 7: taskOptions = (java.util.List<com.pacbio.common.models.pipelines.TaskOption>)value$; break;
    case 8: options = (java.util.List<com.pacbio.common.models.pipelines.PipelineEngineOption>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'version' field.
   */
  public java.lang.CharSequence getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.CharSequence value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'tags' field.
   */
  public java.util.List<java.lang.CharSequence> getTags() {
    return tags;
  }

  /**
   * Sets the value of the 'tags' field.
   * @param value the value to set.
   */
  public void setTags(java.util.List<java.lang.CharSequence> value) {
    this.tags = value;
  }

  /**
   * Gets the value of the 'entryPoints' field.
   */
  public java.util.List<com.pacbio.common.models.pipelines.EntryPoint> getEntryPoints() {
    return entryPoints;
  }

  /**
   * Sets the value of the 'entryPoints' field.
   * @param value the value to set.
   */
  public void setEntryPoints(java.util.List<com.pacbio.common.models.pipelines.EntryPoint> value) {
    this.entryPoints = value;
  }

  /**
   * Gets the value of the 'bindings' field.
   */
  public java.util.List<com.pacbio.common.models.pipelines.PipelineBinding> getBindings() {
    return bindings;
  }

  /**
   * Sets the value of the 'bindings' field.
   * @param value the value to set.
   */
  public void setBindings(java.util.List<com.pacbio.common.models.pipelines.PipelineBinding> value) {
    this.bindings = value;
  }

  /**
   * Gets the value of the 'taskOptions' field.
   */
  public java.util.List<com.pacbio.common.models.pipelines.TaskOption> getTaskOptions() {
    return taskOptions;
  }

  /**
   * Sets the value of the 'taskOptions' field.
   * @param value the value to set.
   */
  public void setTaskOptions(java.util.List<com.pacbio.common.models.pipelines.TaskOption> value) {
    this.taskOptions = value;
  }

  /**
   * Gets the value of the 'options' field.
   */
  public java.util.List<com.pacbio.common.models.pipelines.PipelineEngineOption> getOptions() {
    return options;
  }

  /**
   * Sets the value of the 'options' field.
   * @param value the value to set.
   */
  public void setOptions(java.util.List<com.pacbio.common.models.pipelines.PipelineEngineOption> value) {
    this.options = value;
  }

  /** Creates a new PipelineTemplate RecordBuilder */
  public static com.pacbio.common.models.pipelines.PipelineTemplate.Builder newBuilder() {
    return new com.pacbio.common.models.pipelines.PipelineTemplate.Builder();
  }
  
  /** Creates a new PipelineTemplate RecordBuilder by copying an existing Builder */
  public static com.pacbio.common.models.pipelines.PipelineTemplate.Builder newBuilder(com.pacbio.common.models.pipelines.PipelineTemplate.Builder other) {
    return new com.pacbio.common.models.pipelines.PipelineTemplate.Builder(other);
  }
  
  /** Creates a new PipelineTemplate RecordBuilder by copying an existing PipelineTemplate instance */
  public static com.pacbio.common.models.pipelines.PipelineTemplate.Builder newBuilder(com.pacbio.common.models.pipelines.PipelineTemplate other) {
    return new com.pacbio.common.models.pipelines.PipelineTemplate.Builder(other);
  }
  
  /**
   * RecordBuilder for PipelineTemplate instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PipelineTemplate>
    implements org.apache.avro.data.RecordBuilder<PipelineTemplate> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence name;
    private java.lang.CharSequence description;
    private java.lang.CharSequence version;
    private java.util.List<java.lang.CharSequence> tags;
    private java.util.List<com.pacbio.common.models.pipelines.EntryPoint> entryPoints;
    private java.util.List<com.pacbio.common.models.pipelines.PipelineBinding> bindings;
    private java.util.List<com.pacbio.common.models.pipelines.TaskOption> taskOptions;
    private java.util.List<com.pacbio.common.models.pipelines.PipelineEngineOption> options;

    /** Creates a new Builder */
    private Builder() {
      super(com.pacbio.common.models.pipelines.PipelineTemplate.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.pacbio.common.models.pipelines.PipelineTemplate.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.version)) {
        this.version = data().deepCopy(fields()[3].schema(), other.version);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.tags)) {
        this.tags = data().deepCopy(fields()[4].schema(), other.tags);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.entryPoints)) {
        this.entryPoints = data().deepCopy(fields()[5].schema(), other.entryPoints);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.bindings)) {
        this.bindings = data().deepCopy(fields()[6].schema(), other.bindings);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.taskOptions)) {
        this.taskOptions = data().deepCopy(fields()[7].schema(), other.taskOptions);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.options)) {
        this.options = data().deepCopy(fields()[8].schema(), other.options);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PipelineTemplate instance */
    private Builder(com.pacbio.common.models.pipelines.PipelineTemplate other) {
            super(com.pacbio.common.models.pipelines.PipelineTemplate.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.version)) {
        this.version = data().deepCopy(fields()[3].schema(), other.version);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.tags)) {
        this.tags = data().deepCopy(fields()[4].schema(), other.tags);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.entryPoints)) {
        this.entryPoints = data().deepCopy(fields()[5].schema(), other.entryPoints);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.bindings)) {
        this.bindings = data().deepCopy(fields()[6].schema(), other.bindings);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.taskOptions)) {
        this.taskOptions = data().deepCopy(fields()[7].schema(), other.taskOptions);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.options)) {
        this.options = data().deepCopy(fields()[8].schema(), other.options);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'name' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'description' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'version' field */
    public java.lang.CharSequence getVersion() {
      return version;
    }
    
    /** Sets the value of the 'version' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder setVersion(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.version = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'version' field has been set */
    public boolean hasVersion() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'version' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder clearVersion() {
      version = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'tags' field */
    public java.util.List<java.lang.CharSequence> getTags() {
      return tags;
    }
    
    /** Sets the value of the 'tags' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder setTags(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[4], value);
      this.tags = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'tags' field has been set */
    public boolean hasTags() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'tags' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder clearTags() {
      tags = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'entryPoints' field */
    public java.util.List<com.pacbio.common.models.pipelines.EntryPoint> getEntryPoints() {
      return entryPoints;
    }
    
    /** Sets the value of the 'entryPoints' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder setEntryPoints(java.util.List<com.pacbio.common.models.pipelines.EntryPoint> value) {
      validate(fields()[5], value);
      this.entryPoints = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'entryPoints' field has been set */
    public boolean hasEntryPoints() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'entryPoints' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder clearEntryPoints() {
      entryPoints = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'bindings' field */
    public java.util.List<com.pacbio.common.models.pipelines.PipelineBinding> getBindings() {
      return bindings;
    }
    
    /** Sets the value of the 'bindings' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder setBindings(java.util.List<com.pacbio.common.models.pipelines.PipelineBinding> value) {
      validate(fields()[6], value);
      this.bindings = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'bindings' field has been set */
    public boolean hasBindings() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'bindings' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder clearBindings() {
      bindings = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'taskOptions' field */
    public java.util.List<com.pacbio.common.models.pipelines.TaskOption> getTaskOptions() {
      return taskOptions;
    }
    
    /** Sets the value of the 'taskOptions' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder setTaskOptions(java.util.List<com.pacbio.common.models.pipelines.TaskOption> value) {
      validate(fields()[7], value);
      this.taskOptions = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'taskOptions' field has been set */
    public boolean hasTaskOptions() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'taskOptions' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder clearTaskOptions() {
      taskOptions = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'options' field */
    public java.util.List<com.pacbio.common.models.pipelines.PipelineEngineOption> getOptions() {
      return options;
    }
    
    /** Sets the value of the 'options' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder setOptions(java.util.List<com.pacbio.common.models.pipelines.PipelineEngineOption> value) {
      validate(fields()[8], value);
      this.options = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'options' field has been set */
    public boolean hasOptions() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'options' field */
    public com.pacbio.common.models.pipelines.PipelineTemplate.Builder clearOptions() {
      options = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public PipelineTemplate build() {
      try {
        PipelineTemplate record = new PipelineTemplate();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.version = fieldSetFlags()[3] ? this.version : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.tags = fieldSetFlags()[4] ? this.tags : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[4]);
        record.entryPoints = fieldSetFlags()[5] ? this.entryPoints : (java.util.List<com.pacbio.common.models.pipelines.EntryPoint>) defaultValue(fields()[5]);
        record.bindings = fieldSetFlags()[6] ? this.bindings : (java.util.List<com.pacbio.common.models.pipelines.PipelineBinding>) defaultValue(fields()[6]);
        record.taskOptions = fieldSetFlags()[7] ? this.taskOptions : (java.util.List<com.pacbio.common.models.pipelines.TaskOption>) defaultValue(fields()[7]);
        record.options = fieldSetFlags()[8] ? this.options : (java.util.List<com.pacbio.common.models.pipelines.PipelineEngineOption>) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
