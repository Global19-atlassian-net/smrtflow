/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.pacbio.common.models.reports;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ReportTableColumn extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ReportTableColumn\",\"namespace\":\"com.pacbio.common.models.reports\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"header\",\"type\":\"string\"},{\"name\":\"value\",\"type\":{\"type\":\"array\",\"items\":[\"int\",\"float\"]},\"desc\":\"Column values. Attention to mixed-types attempting to represent 'NA'\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence header;
  @Deprecated public java.util.List<java.lang.Object> value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ReportTableColumn() {}

  /**
   * All-args constructor.
   */
  public ReportTableColumn(java.lang.CharSequence id, java.lang.CharSequence header, java.util.List<java.lang.Object> value) {
    this.id = id;
    this.header = header;
    this.value = value;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return header;
    case 2: return value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: header = (java.lang.CharSequence)value$; break;
    case 2: value = (java.util.List<java.lang.Object>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'header' field.
   */
  public java.lang.CharSequence getHeader() {
    return header;
  }

  /**
   * Sets the value of the 'header' field.
   * @param value the value to set.
   */
  public void setHeader(java.lang.CharSequence value) {
    this.header = value;
  }

  /**
   * Gets the value of the 'value' field.
   */
  public java.util.List<java.lang.Object> getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.util.List<java.lang.Object> value) {
    this.value = value;
  }

  /** Creates a new ReportTableColumn RecordBuilder */
  public static com.pacbio.common.models.reports.ReportTableColumn.Builder newBuilder() {
    return new com.pacbio.common.models.reports.ReportTableColumn.Builder();
  }
  
  /** Creates a new ReportTableColumn RecordBuilder by copying an existing Builder */
  public static com.pacbio.common.models.reports.ReportTableColumn.Builder newBuilder(com.pacbio.common.models.reports.ReportTableColumn.Builder other) {
    return new com.pacbio.common.models.reports.ReportTableColumn.Builder(other);
  }
  
  /** Creates a new ReportTableColumn RecordBuilder by copying an existing ReportTableColumn instance */
  public static com.pacbio.common.models.reports.ReportTableColumn.Builder newBuilder(com.pacbio.common.models.reports.ReportTableColumn other) {
    return new com.pacbio.common.models.reports.ReportTableColumn.Builder(other);
  }
  
  /**
   * RecordBuilder for ReportTableColumn instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ReportTableColumn>
    implements org.apache.avro.data.RecordBuilder<ReportTableColumn> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence header;
    private java.util.List<java.lang.Object> value;

    /** Creates a new Builder */
    private Builder() {
      super(com.pacbio.common.models.reports.ReportTableColumn.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.pacbio.common.models.reports.ReportTableColumn.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.header)) {
        this.header = data().deepCopy(fields()[1].schema(), other.header);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.value)) {
        this.value = data().deepCopy(fields()[2].schema(), other.value);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ReportTableColumn instance */
    private Builder(com.pacbio.common.models.reports.ReportTableColumn other) {
            super(com.pacbio.common.models.reports.ReportTableColumn.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.header)) {
        this.header = data().deepCopy(fields()[1].schema(), other.header);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.value)) {
        this.value = data().deepCopy(fields()[2].schema(), other.value);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.pacbio.common.models.reports.ReportTableColumn.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public com.pacbio.common.models.reports.ReportTableColumn.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'header' field */
    public java.lang.CharSequence getHeader() {
      return header;
    }
    
    /** Sets the value of the 'header' field */
    public com.pacbio.common.models.reports.ReportTableColumn.Builder setHeader(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.header = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'header' field has been set */
    public boolean hasHeader() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'header' field */
    public com.pacbio.common.models.reports.ReportTableColumn.Builder clearHeader() {
      header = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'value' field */
    public java.util.List<java.lang.Object> getValue() {
      return value;
    }
    
    /** Sets the value of the 'value' field */
    public com.pacbio.common.models.reports.ReportTableColumn.Builder setValue(java.util.List<java.lang.Object> value) {
      validate(fields()[2], value);
      this.value = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'value' field has been set */
    public boolean hasValue() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'value' field */
    public com.pacbio.common.models.reports.ReportTableColumn.Builder clearValue() {
      value = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public ReportTableColumn build() {
      try {
        ReportTableColumn record = new ReportTableColumn();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.header = fieldSetFlags()[1] ? this.header : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.value = fieldSetFlags()[2] ? this.value : (java.util.List<java.lang.Object>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
