smrtflow {
  engine {
    # This container has a case class EngineConfig
    # The options provided as ${?ENV_VAR_NAME} can be supplied as env vars
    # Max number of Concurrent JobType (pbsmrtpipe, import-dataset, ...) Workers
    maxWorkers = 40
    maxWorkers = ${?PB_ENGINE_MAX_WORKERS}

    # Root directory where all the jobs will reside
    jobRootDir = jobs-root
    jobRootDir = ${?PB_ENGINE_JOB_ROOT}

    # Enable debug mode for jobs
    debug-mode = false
    debug-mode = ${?PB_ENGINE_DEBUG_MODE}

    # The services only have a depenency on three external exes; pbsmrtpipe, sawriter, and samtools
    # Path to setup.sh PB_TOOLS_ENV This will be invoked before the pbsmrtpipe
    # process is called and passed to the exes
    # source /path/to/pb-tools-env.sh && samtools ...
    # if no value is provided, it will assume these processes will be invoked
    # as a child from the parent ENV
    # pb-tools-env = "" defaults to null
    pb-tools-env = ${?PB_TOOLS_ENV}

    # Load TMPDIR or TMP_DIR by default
    pb-tmp-dir = ${?PB_TMP_DIR}

    # Preset that will be used in all pbsmrtpipe jobs.
    pbsmrtpipePresetXml = ${?PB_SMRTPIPE_PRESET_XML}

    # Path to the CMD Template file which can be used to call pbsmrtpipe,
    # The template must have the form "bash ${CMD}" (see the "cluster" template for details)
    pb-cmd-template = ${?PB_CMD_TEMPLATE}
  }

  // MK. Not sure this is really the best place for this. Should this be in the smrt-server-sim ?
  // Test related
  test {
    # point to files.json in the test data repo
    test-files = ""
    test-files = ${?PB_TEST_DATA_FILES}
  }
}
