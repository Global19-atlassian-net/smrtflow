smrtflow {
  // Core SMRT Link DB
  db {
    dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
    // The properties are defined here:
    // https://jdbc.postgresql.org/documentation/publicapi/org/postgresql/ds/PGSimpleDataSource.html
    // The values are mapped via reflection using `setPortNumber` method to `portNumber` property
    properties = {
      databaseName = "smrtlink"
      databaseName = ${?SMRTFLOW_DB_NAME}
      user = "smrtlink_user"
      user = ${?SMRTFLOW_DB_USER}
      password = "password"
      password = ${?SMRTFLOW_DB_PASSWORD}
      portNumber = 5432
      portNumber = ${?SMRTFLOW_DB_PORT}
      serverName = "localhost"
      serverName = ${?SMRTFLOW_DB_HOST}
    }
    numThreads = 20
  }

  server {
    // There's some duplication from a previous era, hence there are
    // duplicated ENV vars defined for some properties

    // Server PORT
    port = 8070
    port = ${?PB_SERVICES_PORT}
    port = ${?SMRTFLOW_SERVER_PORT}

    // Host to bind to. This almost always does not need to be set.
    host = "0.0.0.0"
    host = ${?PB_SERVICES_HOST}
    host = ${?SMRTFLOW_SERVER_HOST}


    // Unclear if this should have a default.
    dnsName = ${?SMRTFLOW_SERVER_DNS_NAME}

    // Load versions of external components (e.g, SL, SLUI)
    // Not sure this is the correct namespace for this
    manifestFile = ${?PB_SERVICES_MANIFEST_FILE}

    // PacBio Bundle dir. This will be created if it doesn't exist.
    bundleDir = pacbio-bundles
    bundleDir = ${?SMRTFLOW_BUNDLE_DIR}

    // Remove "Eve" URL for sending SL Event and Uploading files.
    eventUrl = ${?SMRTFLOW_EVENT_URL}
  }

  engine {
    # This container has a case class EngineConfig
    # The options provided as ${?ENV_VAR_NAME} can be supplied as env vars
    # Max number of Concurrent JobType (pbsmrtpipe, import-dataset, ...) Workers
    maxWorkers = 35
    maxWorkers = ${?PB_ENGINE_MAX_WORKERS}

    # Root directory where all the jobs will reside
    jobRootDir = jobs-root
    jobRootDir = ${?PB_ENGINE_JOB_ROOT}

    # Enable debug mode for jobs
    debug-mode = false
    debug-mode = ${?PB_ENGINE_DEBUG_MODE}

    # Path to pbsmrtpipe Preset XML
    pbsmrtpipePresetXml = ${?PB_SMRTPIPE_XML_PRESET}

    # The services only have a depenency on three external exes; pbsmrtpipe, sawriter, and samtools
    # Path to setup.sh PB_TOOLS_ENV This will be invoked before the pbsmrtpipe
    # process is called and passed to the exes
    # source /path/to/pb-tools-env.sh && samtools ...
    # if no value is provided, it will assume these processes will be invoked
    # as a child from the parent ENV
    # default of None
    pb-tools-env = ${?PB_TOOLS_ENV}

    # Path to the CMD Template file which can be used to call pbsmrtpipe,
    # The template must have the form "bash ${CMD}" (see the "cluster" template for details)
    pb-cmd-template = ${?PB_CMD_TEMPLATE}
  }

  mock {
    // Number of Mock pbsmrtpipe jobs to import
    pbsmrtpipe-jobs = 5000
    pbsmrtpipe-jobs = ${?MOCK_PBSMRTPIPE_JOBS}

    // Number of Mock import-dataset jobs to import
    import-dataset-jobs = 8000
    import-dataset-jobs = ${?MOCK_IMPORT_DATASET_JOBS}

    subreadsets = 8000
    subreadsets = ${?MOCK_SUBREADSETS}

    referencesets = 1000
    referencesets = ${?MOCK_REFERENCESETS}

    alignmentsets = 12000
    alignmentsets = ${?MOCK_ALIGNMENTSETS}

    nchunks = 100
    nchunks = ${?MOCK_NCHUNKS}

  }
  // Event Server and Client? keys. The smrtflow.server.eventURL needs to be renamed or clarified
  event {
    // for the FileWriter
    eventRootDir = "smrtlink-events"
    eventRootDir = ${?SMRTFLOW_EVENT_ROOT_DIR}
    // Try to migrate way from the original "Event" server name.
    eventRootDir = ${?EVE_ROOT_DIR}

    // This should be loaded from a customized managed resource set by sbt at build time
    apiSecret = "pbsecret"
    apiSecret = ${?SMRTFLOW_EVENT_API_SECRET}

  }
  // MK. Not sure this is really the best place for this. Should this be in the smrt-server-sim ?
  // Test related
  test {
    # point to files.json in the test data repo
    test-files = ""
    test-files = ${?PB_TEST_DATA_FILES}
  }

}

pacBioSystem {

  tmpDir = "/tmp"

  // For testing, these shouldn't have defaults
  // This should be provided as http://my-host:my-port/smrt-link/bundles
  remoteBundleUrl = ${?PACBIO_SYSTEM_REMOTE_BUNDLE_URL}

  // Remote default polling interval (in hours) of the remote PacBio System
  remoteBundlePollHours = ${?PACBIO_SYSTEM_REMOTE_POLL}

  // If this isn't provided, the system should gracefully handle with reasonable error messages
  smrtLinkSystemRoot = ${?PACBIO_SYSTEM_SMRTLINK_SYSTEM_ROOT}

  // Must be a valid UUID
  smrtLinkSystemId = ${?PACBIO_SYSTEM_ID}

  pgDataDir = ${?PACBIO_SYSTEM_PG_DATA_DIR}

  // This must be defined in the akka.quartz.schedules
  dbBackUpSchedule = "EverySaturdayMorning"
  dbBackUpSchedule = ${?PACBIO_SYSTEM_DB_BACKUP_SCHEDULE}

  alarmSchedule = "Every10Minutes"
  alarmSchedule = ${?PACBIO_SYSTEM_ALARM_SCHEDULE}

  dataIntegritySchedule = "Every24Hours"
  dataIntegritySchedule = ${?PACBIO_SYSTEM_DATA_INTEGRITY_SCHEDULE}
}
