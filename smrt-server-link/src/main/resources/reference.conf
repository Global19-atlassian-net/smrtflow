pb-services {
  # This can be provided as just a path or with jdbc:sqlite: prefix
  db-uri = "jdbc:sqlite:db/analysis_services.db"
  db-uri = ${?PB_SERVICES_DB_URI}
  host = "0.0.0.0"
  port = 8070
  port = ${?PB_SERVICES_PORT}
  // Load versions of external components (e.g, SL, SLUI)
  manifest-file = ${?PB_SERVICES_MANIFEST_FILE}
}

// A new properly namespaced.
// ALL the SL keys that are in random namespaces MUST be
// converged back to this namespace
// FIXME(mpkocher)(2016-12-13) It's not clear to me if we should use SMRTLINK or SMRTFLOW as the root prefix.
// SMRTFLOW_* makes more sense than SMRTLINK_* and certainly is better than PB_SERVICE_*
smrtflow {
  // Core SMRT Link DB
  db {
    dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
    properties = {
      databaseName = "smrtlink"
      databaseName = ${?SMRTFLOW_TEST_DB_NAME}
      user = "smrtlink_user"
      user = ${?SMRTFLOW_TEST_DB_USER}
      password = "password"
      password = ${?SMRTFLOW_TEST_DB_PASSWORD}
    }
    numThreads = 10
  }

  // Server PORT
  port = 8070
  port = ${?SMRTFLOW_PORT}
  //
  host = "0.0.0.0"
  host = ${?SMRTFLOW_HOST}
}

# TODO(smcclellan): Which of these configs are required for SMRT Link?
pb-engine {
  # This container has a case class EngineConfig
  # The options provided as ${?ENV_VAR_NAME} can be supplied as env vars
  # Max number of Concurrent JobType (pbsmrtpipe, import-dataset, ...) Workers
  max-workers = 35
  max-workers = ${?PB_ENGINE_MAX_WORKERS}

  # Root directory where all the jobs will reside
  jobs-root = jobs-root
  jobs-root = ${?PB_ENGINE_JOB_ROOT}

  # Enable debug mode for jobs
  debug-mode = false
  debug-mode = ${?PB_ENGINE_DEBUG_MODE}

  # Path to pbsmrtpipe Preset XML
  pb-smrtpipe-preset-xml = ${?PB_SMRTPIPE_XML_PRESET}

  # Path to the CMD Template file which can be used to call pbsmrtpipe,
  # The template must have the form "bash ${CMD}" (see the "cluster" template for details)
  pb-cmd-template = ${?PB_CMD_TEMPLATE}
}
