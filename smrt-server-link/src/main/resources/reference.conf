smrtflow {
  // Core SMRT Link DB
  db {
    dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
    properties = {
      databaseName = "smrtlink"
      databaseName = ${?SMRTFLOW_DB_NAME}
      user = "smrtlink_user"
      user = ${?SMRTFLOW_DB_USER}
      password = "password"
      password = ${?SMRTFLOW_DB_PASSWORD}
      port = 5432
      port = ${?SMRTFLOW_DB_PORT}
      host = "localhost"
      host = ${?SMRTFLOW_DB_HOST}
    }
    numThreads = 10
  }

  server {
    // Server PORT
    port = 8070
    port = ${?SMRTFLOW_SERVER_PORT}
    //
    host = "0.0.0.0"
    host = ${?SMRTFLOW_SERVER_HOST}

    // Load versions of external components (e.g, SL, SLUI)
    // Not sure this is the correct namespace for this
    manifest-file = ${?PB_SERVICES_MANIFEST_FILE}
  }

  engine {
    # This container has a case class EngineConfig
    # The options provided as ${?ENV_VAR_NAME} can be supplied as env vars
    # Max number of Concurrent JobType (pbsmrtpipe, import-dataset, ...) Workers
    max-workers = 35
    max-workers = ${?PB_ENGINE_MAX_WORKERS}

    # Root directory where all the jobs will reside
    jobs-root = jobs-root
    jobs-root = ${?PB_ENGINE_JOB_ROOT}

    # Enable debug mode for jobs
    debug-mode = false
    debug-mode = ${?PB_ENGINE_DEBUG_MODE}

    # Path to pbsmrtpipe Preset XML
    pb-smrtpipe-preset-xml = ${?PB_SMRTPIPE_XML_PRESET}

    # Path to the CMD Template file which can be used to call pbsmrtpipe,
    # The template must have the form "bash ${CMD}" (see the "cluster" template for details)
    pb-cmd-template = ${?PB_CMD_TEMPLATE}
  }

  mock {
    // Number of Mock pbsmrtpipe jobs to import
    pbsmrtpipe-jobs = 5000
    pbsmrtpipe-jobs = ${?MOCK_PBSMRTPIPE_JOBS}

    // Number of Mock import-dataset jobs to import
    import-dataset-jobs = 8000
    import-dataset-jobs = ${?MOCK_IMPORT_DATASET_JOBS}

    subreadsets = 8000
    subreadsets = ${?MOCK_SUBREADSETS}

    referencesets = 1000
    referencesets = ${?MOCK_REFERENCESETS}

    alignmentsets = 12000
    alignmentsets = ${?MOCK_ALIGNMENTSETS}

    nchunks = 100
    nchunks = ${?MOCK_NCHUNKS}

  }

}
