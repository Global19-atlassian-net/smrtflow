{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "info": {
    "version": "1.0.0",
    "description": "SMRTLink Services Swagger 2.0 specification",
    "title": "SMRT Link Services for SMRT Link 6.0.0"
  },
  "host": "localhost:8081",
  "basePath": "/SMRTLink/1.0.0",
  "x-wso2-security": {
    "apim": {
      "x-wso2-scopes": [
        {
          "roles": "Internal/PbAdmin,Internal/PbLabTech,Internal/PbInstrument",
          "name": "run-design",
          "key": "run-design",
          "description": "Run Design Authorization"
        },
        {
          "roles": "Internal/PbAdmin,Internal/PbLabTech,Internal/PbBioinformatician,Internal/PbInstrument",
          "name": "run-qc",
          "key": "run-qc",
          "description": "Run QC Authorization"
        },
        {
          "roles": "Internal/PbAdmin,Internal/PbLabTech",
          "name": "sample-setup",
          "key": "sample-setup",
          "description": "Sample Setup Authorization"
        },
        {
          "roles": "Internal/PbAdmin,Internal/PbLabTech,Internal/PbBioinformatician,Internal/PbInstrument",
          "name": "data-management",
          "key": "data-management",
          "description": "Data Management Authorization"
        },
        {
          "roles": "Internal/PbAdmin,Internal/PbLabTech,Internal/PbBioinformatician,Internal/PbInstrument",
          "name": "analysis",
          "key": "analysis",
          "description": "SMRT Analysis Authorization"
        }
      ]
    }
  },
  "paths": {
    "/status": {
      "get": {
        "description": "Get the SMRT Link System Status containing system metadata, such as SL System Id, uptime and status message.",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Failed to get Server status likely means the server is down"
          },
          "200": {
            "description": "SMRT Link Analysis Server Status",
            "schema": {
              "$ref": "#/definitions/SmrtServerStatus"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/swagger": {
      "get": {
        "description": "Retrieve swagger file contents",
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Contents of swagger file"
          }
        },
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/user": {
      "get": {
        "description": "From the header JWT, convert to a UserRecord",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "User information",
            "schema": {
              "$ref": "#/definitions/UserRecord"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/manifests": {
      "get": {
        "description": "Returns a list of all installed components with version information",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of component manifests",
            "schema": {
              "$ref": "#/definitions/Manifests"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/manifests/{resourceId}": {
      "get": {
        "description": "Returns an object describing a specific installed component",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Manifest Id",
            "required": true,
            "type": "string",
            "name": "resourceId",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Individual component manifest",
            "schema": {
              "$ref": "#/definitions/Manifest"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/files/*": {
      "get": {
        "description": "Return a list of files in specified server path",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Directory resource object",
            "schema": {
              "$ref": "#/definitions/DirectoryResource"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/files-diskspace/*": {
      "get": {
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Return value"
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/disk-space": {
      "get": {
        "description": "Retrieve information about available disk space",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of disk space resources",
            "schema": {
              "$ref": "#/definitions/DiskSpaceResources"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/disk-space/{resourceId}": {
      "get": {
        "description": "Retrieve information about available disk space for specified resource",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Disk space resource info",
            "schema": {
              "$ref": "#/definitions/DiskSpace"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "resourceId",
            "in": "path"
          }
        ],
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/eula": {
      "post": {
        "description": "Record user acceptance of tech support agreement",
        "responses": {
          "201": {
            "description": "User agreement record",
            "schema": {
              "$ref": "#/definitions/UserAgreement"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "required": true,
            "name": "body",
            "in": "body",
            "description": "User response to agreement",
            "schema": {
              "$ref": "#/definitions/UserAgreementAcceptance"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "description": "Retrieve history of user agreement acceptances",
        "x-scope": "analysis",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of user agreement records",
            "schema": {
              "$ref": "#/definitions/UserAgreements"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/eula/{version}": {
      "get": {
        "description": "Retrieve user agreement acceptance record for specified version",
        "x-scope": "analysis",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "User agreement record",
            "schema": {
              "$ref": "#/definitions/UserAgreement"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Update the configuration (enable Job & Install Metrics) for specified SMRT Link version",
        "x-scope": "analysis",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "User agreement record",
            "schema": {
              "$ref": "#/definitions/EulaUpdateRecord"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "description": "Delete an previously accepted user agreement acceptance record for specified version",
        "x-scope": "analysis",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Message of the Success of deleting the user acceptance record"
          }
        },
        "x-auth-type": "Application & Application User"
      },
      "parameters": [
        {
          "description": "Version of EULA",
          "required": true,
          "type": "string",
          "name": "version",
          "in": "path"
        }
      ]
    },
    "/smrt-link/alarms": {
      "get": {
        "description": "Get a List of SMRT Link System Level AlarmStatus instances",
        "responses": {
          "200": {
            "description": "Returns a List of SmrtLink System Level Alarm Status instances",
            "schema": {
              "$ref": "#/definitions/ListAlarmStatus"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-auth-type": "None",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/alarms/{alarmId}": {
      "get": {
        "description": "Get a SMRT Link System Alarm Status by Id",
        "parameters": [
          {
            "description": "Alarm Id (e.g., smrtlink.alarms.job_dir)",
            "required": true,
            "type": "string",
            "name": "alarmId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "SMRT Link System Alarm Status by Id",
            "schema": {
              "$ref": "#/definitions/AlarmStatus"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-auth-type": "None",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/loggers": {
      "post": {
        "description": "Log a message to the server",
        "parameters": [
          {
            "required": true,
            "name": "body",
            "in": "body",
            "description": "Log message",
            "schema": {
              "$ref": "#/definitions/ClientLogMessage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a message",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-auth-type": "None",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/runs": {
      "post": {
        "description": "Create a new instrument run record",
        "parameters": [
          {
            "required": true,
            "name": "body",
            "in": "body",
            "description": "Run creation request",
            "schema": {
              "$ref": "#/definitions/RunCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns new run summary",
            "schema": {
              "$ref": "#/definitions/RunSummary"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-scope": "run-design",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "description": "Retrieve a list of all instrument runs",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Return value",
            "schema": {
              "$ref": "#/definitions/RunSummarys"
            }
          }
        },
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "required": false,
            "type": "string",
            "name": "substring",
            "in": "query"
          },
          {
            "required": false,
            "type": "string",
            "name": "createdBy",
            "in": "query"
          },
          {
            "required": false,
            "type": "string",
            "name": "chipType",
            "in": "query"
          },
          {
            "required": false,
            "type": "boolean",
            "name": "reserved",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "run-qc",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/runs/{runId}": {
      "post": {
        "description": "Update an existing run by ID",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "201": {
            "description": "Returns updated run",
            "schema": {
              "$ref": "#/definitions/Run"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "runId",
            "in": "path"
          },
          {
            "required": true,
            "name": "body",
            "in": "body",
            "description": "Run update request",
            "schema": {
              "$ref": "#/definitions/RunUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "run-design",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "description": "Delete a run record by ID",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Server message",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "runId",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "run-design",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      },
      "get": {
        "description": "Retrieve an existing run record by ID",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Run summary record",
            "schema": {
              "$ref": "#/definitions/RunSummary"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "runId",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "run-qc",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/runs/{runId}/datamodel": {
      "get": {
        "description": "Retrieve an existing run XML record by ID",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Run XML"
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "runId",
            "in": "path"
          }
        ],
        "produces": [
          "text/xml"
        ],
        "x-scope": "run-qc",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/runs/{runId}/collections": {
      "get": {
        "description": "Retrieve a list of collections associated with a run",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of collections associated with a run",
            "schema": {
              "$ref": "#/definitions/CollectionsDetails"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "runId",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "run-qc",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/runs/{runId}/collections/{collectionId}": {
      "get": {
        "description": "Retrieve an existing collection by ID and run ID",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Details for an individual collection",
            "schema": {
              "$ref": "#/definitions/CollectionDetails"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "runId",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "collectionId",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "run-qc",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/samples": {
      "post": {
        "description": "Create a new sample record",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sample record create request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SampleCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Return new sample record",
            "schema": {
              "$ref": "#/definitions/Sample"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-scope": "sample-setup",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "description": "Retrieve a list of existing sample records",
        "x-scope": "sample-setup",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of samples",
            "schema": {
              "$ref": "#/definitions/Samples"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/samples/{sampleId}": {
      "post": {
        "description": "Update an existing sample record by ID",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "201": {
            "description": "Return updated sample record",
            "schema": {
              "$ref": "#/definitions/Sample"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "sampleId",
            "in": "path"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Sample record update request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SampleUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "sample-setup",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "description": "Delete an existing sample record by ID",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Server message",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "sampleId",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "sample-setup",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      },
      "get": {
        "description": "Retrieve an existing sample record by ID",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Sample record",
            "schema": {
              "$ref": "#/definitions/Sample"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "sampleId",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "sample-setup",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/registry-service/resources": {
      "get": {
        "description": "Retrieve a list of registry resources",
        "parameters": [
          {
            "in": "query",
            "name": "resourceId",
            "type": "string",
            "description": "Resource ID string",
            "required": false
          }
        ],
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "responses": {
          "default": {
            "description": "Default response"
          },
          "200": {
            "description": "List of registry resources",
            "schema": {
              "$ref": "#/definitions/RegistryResources"
            }
          }
        },
        "x-scope": "data-management",
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Registry a new resource",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Resource request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistryResourceCreate"
            }
          }
        ],
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "responses": {
          "default": {
            "description": "Default response"
          },
          "201": {
            "description": "New registry resource",
            "schema": {
              "$ref": "#/definitions/RegistryResource"
            }
          }
        },
        "x-scope": "data-management",
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/registry-service/resources/{uuid}": {
      "get": {
        "description": "Retrieve a registry resource by unique ID",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "type": "string",
            "description": "Resource UUID",
            "required": true
          }
        ],
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "responses": {
          "default": {
            "description": "Default response"
          },
          "200": {
            "description": "Registry resource",
            "schema": {
              "$ref": "#/definitions/RegistryResource"
            }
          }
        },
        "x-scope": "data-management",
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "description": "Delete a registry resource by unique ID",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "type": "string",
            "description": "Resource UUID",
            "required": true
          }
        ],
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "responses": {
          "default": {
            "description": "Default response"
          },
          "200": {
            "description": "Default response"
          }
        },
        "x-scope": "data-management",
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/registry-service/resources/{uuid}/update-status": {
      "post": {
        "description": "Update a registry resource",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "type": "string",
            "description": "Resource UUID",
            "required": true
          }
        ],
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "responses": {
          "default": {
            "description": "Default response"
          },
          "201": {
            "description": "Updated resource",
            "schema": {
              "$ref": "#/definitions/RegistryResource"
            }
          }
        },
        "x-scope": "data-management",
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/registry-service/resources/{uuid}/update": {
      "post": {
        "description": "Update a registry resource",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "type": "string",
            "description": "Resource UUID",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistryResourceUpdate"
            }
          }
        ],
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "responses": {
          "default": {
            "description": "Default response"
          },
          "201": {
            "description": "Updated resource",
            "schema": {
              "$ref": "#/definitions/RegistryResource"
            }
          }
        },
        "x-scope": "data-management",
        "x-throttling-tier": "Unlimited",
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/bundles": {
      "get": {
        "description": "Get a list of all registered bundles (active or inactive) in the system",
        "x-scope": "data-management",
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Unable to get bundle service. Bundle service is down"
          },
          "200": {
            "description": "List of PacBio Data Bundless",
            "schema": {
              "$ref": "#/definitions/PacBioDataBundleList"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Add a new bundle to the system from a URL that points to a tgz file",
        "x-scope": "data-management",
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PacBio Data Bundle URL (ends with .tar.gz)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PacBioBundleRecord"
            }
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Unable to download bundle or bundle is malformed"
          },
          "200": {
            "description": "Returns a PacBio Data Bundle that was successfully added to the registry",
            "schema": {
              "$ref": "#/definitions/PacBioBundleRecord"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/bundles/{bundleType}": {
      "get": {
        "description": "Get a list of all registered bundles by bundle type (active or inactive) in the system",
        "x-scope": "data-management",
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "parameters": [
          {
            "description": "Bundle type id (e.g., 'chemistry', 'pbtestdata')",
            "required": true,
            "type": "string",
            "name": "bundleType",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Unable to find any PacBio Data Bundle(s) with provide bundle type"
          },
          "200": {
            "description": "List of PacBio Data Bundles for provide bundle type",
            "schema": {
              "$ref": "#/definitions/PacBioDataBundleList"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/bundles/{bundleType}/active": {
      "get": {
        "description": "Get the PacBio Data bundle that is active for provided bundle type",
        "x-scope": "data-management",
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "parameters": [
          {
            "description": "Bundle type id (e.g., 'chemistry', 'pbtestdata')",
            "required": true,
            "type": "string",
            "name": "bundleType",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Unable to find any PacBio Data Bundle(s) with provide bundle type"
          },
          "200": {
            "description": "Get the currently Active PacBio Data Bundle for a given bundle type",
            "schema": {
              "$ref": "#/definitions/PacBioDataBundle"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/bundles/{bundleType}/active/files/{relativePath}": {
      "get": {
        "description": "Get the a data file from an Active PacBio Data Bundle for a given bundle type. The mimetype will be inferred from the file extension",
        "x-scope": "data-management",
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "parameters": [
          {
            "description": "Bundle type id (e.g., 'chemistry', 'pbtestdata')",
            "required": true,
            "type": "string",
            "name": "bundleType",
            "in": "path"
          },
          {
            "description": "URL encoded Relative Path to file in the bundle. For example 'SampleCalculatorParams.json' or 'definitions/PacBioAutomationConstraints.xml'",
            "required": true,
            "type": "string",
            "name": "relativePath",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Unable to find any PacBio Data Bundle(s) with provide bundle type. Or relative Path doesn't exist in bundle"
          },
          "200": {
            "description": "Get the currently Active PacBio Data Bundle for a given bundle type. Returns Null if no bundle is provided"
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/bundles/{bundleType}/latest": {
      "get": {
        "description": "Get the PacBio Data bundle that is most recent version for provided bundle type",
        "x-scope": "data-management",
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "parameters": [
          {
            "description": "Bundle type id (e.g., 'chemistry', 'pbtestdata')",
            "required": true,
            "type": "string",
            "name": "bundleType",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Unable to find any PacBio Data Bundle(s) with provide bundle type"
          },
          "200": {
            "description": "List of PacBio Data Bundles for provide bundle type",
            "schema": {
              "$ref": "#/definitions/PacBioDataBundle"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/bundles/{bundleType}/{bundleVersion}": {
      "get": {
        "description": "Get a PacBio Data Bundle by Id (bundleType, bundleVersion)",
        "x-scope": "data-management",
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "parameters": [
          {
            "description": "Bundle type id (e.g., 'chemistry', 'pbtestdata')",
            "required": true,
            "type": "string",
            "name": "bundleType",
            "in": "path"
          },
          {
            "description": "Bundle version (e.g., 1.2.3) This should adhere to the Semantic Version scheme",
            "required": true,
            "type": "string",
            "name": "bundleVersion",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Unable to find PacBio Data Bundle for bundle type and bundle version provided"
          },
          "200": {
            "description": "PacBio Data Bundle",
            "schema": {
              "$ref": "#/definitions/PacBioDataBundle"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/bundles/{bundleType}/{bundleVersion}/download": {
      "get": {
        "description": "Download a PacBio Data Bundle TGZ by Id (bundleType, bundleVersion). User should explicitly set 'Accept:application/x-tar' header as this is the only output currently supported.",
        "x-scope": "data-management",
        "produces": [
          "application/x-tar"
        ],
        "parameters": [
          {
            "description": "Bundle type id (e.g., 'chemistry', 'pbtestdata')",
            "required": true,
            "type": "string",
            "name": "bundleType",
            "in": "path"
          },
          {
            "description": "Bundle version (e.g., 1.2.3) This should adhere to the Semantic Version scheme",
            "required": true,
            "type": "string",
            "name": "bundleVersion",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Unable to find PacBio Data Bundle for bundle type and bundle version provided"
          },
          "200": {
            "description": "PacBio Data TGZ Bundle"
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/bundles/{bundleType}/{bundleVersion}/upgrade": {
      "post": {
        "description": "Upgrade (i.e., 'Activate') a specific Data Bundle by Id (bundleType, bundleVersion). This will mark the bundle as Active and mark other Data bundles as inActive",
        "x-scope": "data-management",
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "parameters": [
          {
            "description": "Bundle type id (e.g., 'chemistry', 'pbtestdata')",
            "required": true,
            "type": "string",
            "name": "bundleType",
            "in": "path"
          },
          {
            "description": "Bundle version (e.g., 1.2.3) This should adhere to the Semantic Version scheme",
            "required": true,
            "type": "string",
            "name": "bundleVersion",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Unable to find PacBio Data Bundle for bundle type and bundle version provided"
          },
          "200": {
            "description": "Returns an Activated PacBio Data Bundle",
            "schema": {
              "$ref": "#/definitions/PacBioBundleRecord"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/bundles/{bundleType}/{bundleVersion}/activate": {
      "post": {
        "description": "Upgrade (i.e., 'Activate') a specific Data Bundle by Id (bundleType, bundleVersion). This will mark the bundle as Active and mark other Data bundles as inActive",
        "x-scope": "data-management",
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "parameters": [
          {
            "description": "Bundle type id (e.g., 'chemistry', 'pbtestdata')",
            "required": true,
            "type": "string",
            "name": "bundleType",
            "in": "path"
          },
          {
            "description": "Bundle version (e.g., 1.2.3) This should adhere to the Semantic Version scheme",
            "required": true,
            "type": "string",
            "name": "bundleVersion",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Unable to find PacBio Data Bundle for bundle type and bundle version provided"
          },
          "200": {
            "description": "Returns an Activated PacBio Data Bundle",
            "schema": {
              "$ref": "#/definitions/PacBioBundleRecord"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/bundles/{bundleType}/upgrade": {
      "get": {
        "description": "Check for an upgrade for a specific PacBio Bundle type version ",
        "x-scope": "data-management",
        "produces": [
          "text/plain; charset=UTF-8"
        ],
        "parameters": [
          {
            "description": "Bundle type id (e.g., 'chemistry', 'pbtestdata')",
            "required": true,
            "type": "string",
            "name": "bundleType",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Unable to find PacBio Data Bundle with type `bundleType`"
          },
          "200": {
            "description": "PacBid Data Bundle Upgrade. If null, there is no upgrade available"
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/events": {
      "post": {
        "description": "Send SMRT Link an SmrtLinkEvent",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "SMRT Link Event",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SmrtLinkEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/SmrtLinkSystemEvent"
            },
            "description": "Created SmrtLink System Event"
          },
          "default": {
            "description": "Return value"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/dataset-types": {
      "get": {
        "description": "Get a Summary of each DataSet MetaType. Each model will have the 'short' name of the DataSet MetaType that is accessible at datasets/{ds-metatype}",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of dataset type definitions",
            "schema": {
              "$ref": "#/definitions/DatasetTypes"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/datasets/{typeOrId}": {
      "get": {
        "description": "Either the DataSet Metatype (e.g, subreads to return a list of Datasets by metadata type) or Int or UUID for DataSet to get a DataSet Service MetaData for the requested dataset.",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of dataset records of this type.  See the type-specific endpoints for retrieving individual datasets for response schemas"
          }
        },
        "parameters": [
          {
            "description": "Either the DataSet Metatype or DataSet Int or UUID for the PacBio DataSet.",
            "required": true,
            "type": "string",
            "name": "typeOrId",
            "in": "path"
          },
          {
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "The maximum number of datasets returned",
            "default": 10000
          },
          {
            "in": "query",
            "type": "integer",
            "name": "marker",
            "description": "The offset of the number of records to return"
          },
          {
            "in": "query",
            "type": "integer",
            "name": "id",
            "description": "DataSet id Numeric QueryFilter e.g., '1' or 'in:1,2,3', 'gt:7'"
          },
          {
            "in": "query",
            "type": "integer",
            "name": "uuid",
            "description": "DataSet UUID QueryFilter e.g., 'bed09210-272b-11e8-b223-e3d877ad877e' or 'in:bed09210-272b-11e8-b223-e3d877ad877e,ca234090-272b-11e8-abef-0773aed21b78'"
          },
          {
            "in": "query",
            "type": "integer",
            "name": "name",
            "description": "DataSet name String QueryFilter e.g., 'alpha' or 'in:alpha,beta'"
          },
          {
            "in": "query",
            "type": "integer",
            "name": "path",
            "description": "DataSet path String QueryFilter e.g., '/path/to/dataset.xml' or 'in:/alpha.xml,/beta.xml' Note, these need to be URL encoded"
          },
          {
            "in": "query",
            "type": "integer",
            "name": "numRecords",
            "description": "DataSet numRecord Numeric QueryFilter e.g., '1' or 'in:1,2,3', 'gt:7'"
          },
          {
            "in": "query",
            "type": "integer",
            "name": "totalLength",
            "description": "DataSet totalLength Numeric QueryFilter e.g., '1' or 'in:1,2,3', 'gt:7'"
          },
          {
            "in": "query",
            "type": "string",
            "name": "version",
            "description": "DataSet version String QueryFilter e.g., '3.0.1' or 'in:3.0.1,4.1.0'"
          },
          {
            "in": "query",
            "type": "string",
            "name": "createdBy",
            "description": "DataSet createdBy String QueryFilter e.g., 'ralph' or 'in:Steve,ralph'"
          },
          {
            "in": "query",
            "type": "integer",
            "name": "jobId",
            "description": "DataSet jobId Numeric QueryFilter e.g., '1' or 'in:1,2,3', 'gt:7'"
          },
          {
            "in": "query",
            "type": "integer",
            "name": "projectId",
            "description": "DataSet projectId Numeric QueryFilter e.g., '1' or 'in:1,2,3', 'gt:7'"
          },
          {
            "in": "query",
            "type": "string",
            "name": "createdAt",
            "description": "DataSet createdAt DateTime QueryFilter e.g., '2018-03-14T00:13:26.693Z' or 'gt:2018-03-14T00:13:26.693Z', 'lte:2018-03-14T00:13:26.693Z' (datetime must be specified using ISO8601 format)"
          },
          {
            "in": "query",
            "type": "string",
            "name": "updatedAt",
            "description": "DataSet createdAt DateTime QueryFilter e.g., '2018-03-14T00:13:26.693Z' or 'gt:2018-03-14T00:13:26.693Z', 'lte:2018-03-14T00:13:26.693Z' (datetime must be specified using ISO8601 format)"
          },
          {
            "in": "query",
            "type": "string",
            "name": "importedAt",
            "description": "DataSet imported at DateTime QueryFilter e.g., '2018-03-14T00:13:26.693Z' or 'gt:2018-03-14T00:13:26.693Z', 'lte:2018-03-14T00:13:26.693Z' (datetime must be specified using ISO8601 format)"
          },
          {
            "in": "query",
            "type": "string",
            "name": "isActive",
            "description": "DataSet isActive QueryFilter e.g., 'isActive=true' 'isActive=false'. By default only active (i.e., non-soft-deleted) datasets are returned"
          },
          {
            "in": "query",
            "type": "string",
            "name": "parentUuid",
            "description": "DataSet Parent UUID Optional QueryFilter e.g., 'bed09210-272b-11e8-b223-e3d877ad877e' or 'in:bed09210-272b-11e8-b223-e3d877ad877e,ca234090-272b-11e8-abef-0773aed21b78' or ?parentUuid=null This will return parent datasets (i.e, no children datasets are returned)"
          },
          {
            "in": "query",
            "type": "string",
            "name": "numChildren",
            "description": "DataSet numChildren Numeric QueryFilter e.g., '1' or 'in:1,2,3', 'gt:7' Using numChildren=0 will only return Children datasets, whereas numChildren:gt:0 will return only parent datasets"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      },
      "put": {
        "description": "Update a dataset record",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Server message",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            }
          }
        },
        "parameters": [
          {
            "description": "Either the DataSet Metatype or DataSet Int or UUID for the PacBio DataSet.",
            "required": true,
            "type": "string",
            "name": "typeOrId",
            "in": "path"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Dataset update request (all fields optional)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataSetUpdateRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/dataset-types/{type}": {
      "get": {
        "description": "Get DataSet Meta Type",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Dataset type definition",
            "schema": {
              "$ref": "#/definitions/DatasetType"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/datasets/{type}/{dataset-id}/details": {
      "get": {
        "description": "Returns JSON converted from the DataSet XML. See the PacBio DataSet XSDs for details",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "JSON structure for the given DataSet type (e.g., SubreadSet, ReferenceSet)"
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "dataset-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/datasets/alignments/{dataset-id}": {
      "get": {
        "description": "Get the Service AlignmentSet Metadata",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "AlignmentSet-specific metadata from SMRT Link database",
            "schema": {
              "$ref": "#/definitions/AlignmentSetDetails"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "dataset-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/datasets/hdfsubreads/{dataset-id}": {
      "get": {
        "description": "Get the Service HdfSubreadSet Metadata",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "HdfSubreadSet-specific metadata from SMRT Link database",
            "schema": {
              "$ref": "#/definitions/HdfSubreadSetDetails"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "dataset-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/datasets/subreads/{dataset-id}": {
      "get": {
        "description": "Get the Service SubreadSet Metadata",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "SubreadSet-specific metadata from SMRT Link database",
            "schema": {
              "$ref": "#/definitions/SubreadSetDetails"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "dataset-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/datasets/barcodes/{dataset-id}": {
      "get": {
        "description": "Get the Service BarcodeSet Metadata",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "BarcodeSet-specific metadata from SMRT Link database",
            "schema": {
              "$ref": "#/definitions/BarcodeSetDetails"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "dataset-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/datasets/barcodes/{dataset-id}/record-names": {
      "get": {
        "description": "Get a list of Barcode Id/Names from the BarcodeSet external resources",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of record names",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "dataset-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/datasets/ccsalignments/{dataset-id}": {
      "get": {
        "description": "Get the Service ConsensusAlignmentSet Metadata",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "ConsensusAlignmentSet-specific metadata from SMRT Link database",
            "schema": {
              "$ref": "#/definitions/ConsensusAlignmentSet"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "dataset-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/datasets/contigs/{dataset-id}": {
      "get": {
        "description": "Get the Service ContigSet Metadata",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "ContigSet-specific metadata from SMRT Link database",
            "schema": {
              "$ref": "#/definitions/ContigSetDetails"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "dataset-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/datasets/ccsreads/{dataset-id}": {
      "get": {
        "description": "Get the Service CCS ReadSet Metadata",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "ConsensusReadSet-specific metadata from SMRT Link database",
            "schema": {
              "$ref": "#/definitions/ConsensusReadDetails"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "dataset-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/datasets/references/{dataset-id}": {
      "get": {
        "description": "Get the Service ReferenceSet Metadata",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "ReferenceSet-specific metadata from SMRT Link database",
            "schema": {
              "$ref": "#/definitions/ReferenceSetDetails"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "dataset-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/datasets/gmapreferences/{dataset-id}": {
      "get": {
        "description": "Get the Service GmapReferenceSet Metadata",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "GmapReferenceSet-specific metadata from SMRT Link database",
            "schema": {
              "$ref": "#/definitions/GmapReferenceSetDetails"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "dataset-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/datasets/{type}/{dataset-id}/reports": {
      "get": {
        "description": "Get the reports associated with a PacBio DataSet. These will often contain num records, total length and filter stats. The reports generated are dependent on the DataSet MetaType (e.g., SubreadSet)",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of datastore report files",
            "schema": {
              "$ref": "#/definitions/DataStoreReportFiles"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "dataset-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/projects": {
      "post": {
        "description": "Create a Project",
        "parameters": [
          {
            "required": true,
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProjectRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New project object",
            "schema": {
              "$ref": "#/definitions/FullProject"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "description": "Get a list of projects",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of project objects",
            "schema": {
              "$ref": "#/definitions/FullProject"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/projects/{id}": {
      "put": {
        "description": "Update the project with the given ID; omitted attributes result in no change to that attribute's value",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Full project information after update",
            "schema": {
              "$ref": "#/definitions/FullProject"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "integer",
            "name": "id",
            "in": "path"
          },
          {
            "required": true,
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProjectRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "description": "Retrieve the project with the given ID",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Full project information",
            "schema": {
              "$ref": "#/definitions/FullProject"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "integer",
            "name": "id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      },
      "delete": {
        "description": "Delete the project with the given ID",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "integer",
            "name": "id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/resolved-pipeline-templates": {
      "get": {
        "description": "Get a list of Resolved Pipeline Templates registered to SMRT Link",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of pipeline templates",
            "schema": {
              "$ref": "#/definitions/ResolvedPipelineTemplates"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/resolved-pipeline-templates/{template-id}": {
      "get": {
        "description": "Get a Resolved Pipeline Template by Ids",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Pipeline template",
            "schema": {
              "$ref": "#/definitions/ResolvedPipelineTemplate"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "template-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/resolved-pipeline-templates/{template-id}/presets": {
      "get": {
        "description": "Get a List of Presets for a specific Resolved Pipeline Template",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of pbsmrtpipe presets associated with a pipeline; see https://github.com/PacificBiosciences/pbcommand/blob/master/pbcommand/schemas/pipeline_presets.avsc for complete specification"
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "template-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/pipeline-template-view-rules": {
      "get": {
        "description": "Return a list of analysis option view rules specifications for individual pipelines",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of pipeline view rules objects",
            "schema": {
              "$ref": "#/definitions/PipelineTemplateViewRules"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/pipeline-template-view-rules/{rule-id}": {
      "get": {
        "description": "Get a Pipeline Template View Rule by id",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "View rules for a specific pipeline",
            "schema": {
              "$ref": "#/definitions/PipelineTemplateViewRule"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "rule-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/report-view-rules": {
      "get": {
        "description": "Report View Rules that override the default view rule for report by type id",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of view rules for all reports"
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/report-view-rules/{rule-id}": {
      "get": {
        "description": "Retrieve report view rules for a specific report ID",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "View rules for specified report ID; see https://github.com/PacificBiosciences/pbcommand/blob/master/pbcommand/schemas/report_spec.avsc for complete specification"
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "rule-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/pipeline-datastore-view-rules": {
      "get": {
        "description": "Get a list of pipeline datastore view rule definitions",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of view rules",
            "schema": {
              "$ref": "#/definitions/PipelineDatastoreViewRules"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/pipeline-datastore-view-rules/{pipelineId}": {
      "get": {
        "description": "Get a datastore view rule definitions for a specific pipeline (with optional version)",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "pipelineId",
            "in": "path",
            "description": "Full pbsmrtpipe pipeline ID (Example: pbsmrtpipe.pipelines.sa3_sat)"
          },
          {
            "required": false,
            "type": "string",
            "name": "version",
            "in": "query",
            "description": "Specific version of SMRT Link to retrieve rules for, defaulting to the current version if not specified (Example, 5.0)"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Pipeline datastore view rules",
            "schema": {
              "$ref": "#/definitions/PipelineDatastoreViewRule"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/job-manager/job-types": {
      "get": {
        "description": "Get a list of job types registered to the SMRT Link System. This can be accessible at job-managers/jobs/{job-type}",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of job type definitions",
            "schema": {
              "$ref": "#/definitions/JobTypes"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/job-manager/jobs/pbsmrtpipe": {
      "post": {
        "description": "Start a pbsmrtpipe job using one or more dataset entry points",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "pbsmrtpipe job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PbSmrtPipeServiceOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/import-dataset": {
      "post": {
        "description": "Import a PacBio DataSet XML and generate associated reports",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Import dataset job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportDataSetOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/import-datasets-zip": {
      "post": {
        "description": "Import a PacBio DataSet(s) XML Zip and generate associated reports",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Import dataset job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportDataSetsZipOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/convert-fasta-reference": {
      "post": {
        "description": "Generate a PacBio ReferenceSet XML (including required index files) from a FASTA file",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Import reference FASTA job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConvertImportFastaOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/convert-fasta-gmapreference": {
      "post": {
        "description": "Generate a PacBio GmapReferenceSet XML (including required index files) from a FASTA file",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Import GMAP reference FASTA job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConvertImportFastaOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/convert-fasta-barcodes": {
      "post": {
        "description": "Generate a PacBio BarcodeSet XML from a FASTA file",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Import barcode FASTA job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConvertImportFastaBarcodesOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/convert-rs-movie": {
      "post": {
        "description": "Convert RS II movie metadata XML to an HdfSubreadSet suitable for pbsmrtpipe input",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Import RS II movie job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MovieMetadataToHdfSubreadOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/merge-datasets": {
      "post": {
        "description": "Combine two or more SubreadSets (or HdfSubreadSets) into a single dataset",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Dataset merge job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataSetMergeServiceOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/export-datasets": {
      "post": {
        "description": "Create a ZIP file containing the contents of one or more datasets, including external resource files",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Dataset export job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataSetExportServiceOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/export-jobs": {
      "post": {
        "description": "Create ZIP files from the outputs (and optionally the entry points) of one or more jobs.  These will be listed individually in the job datastore with sourceId 'pbscala::export-jobs' and fileTypeId 'PacBio.FileTypes.zip'.",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Job export job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportSmrtLinkJobOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/import-job": {
      "post": {
        "description": "Import a SMRT Link job from a ZIP file previously generated by the export-jobs service",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Job import job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportSmrtLinkJobOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/delete-datasets": {
      "post": {
        "description": "Remove a dataset from the database and delete external resource files",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Dataset delete job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataSetDeleteServiceOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/copy-dataset": {
      "post": {
        "description": "Copy a dataset and apply optional filters",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Dataset delete job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyDataSetJobOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/delete-job": {
      "post": {
        "description": "Remove a job from the database and delete output directory contents",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Delete job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteJobServiceOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/import-datastore": {
      "post": {
        "description": "Import all files in a datastore JSON",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Datastore import job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportDataStoreOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/tech-support-job": {
      "post": {
        "description": "Send a request to PacBio Tech Support for assistance with a failed job (request will include job details and log files)",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Tech support failed job bundle options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TsJobBundleJobServiceOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/tech-support-status": {
      "post": {
        "description": "Send a summary of SMRT Link system status to PacBio Tech Support",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Tech support system status bundle options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TsSystemStatusServiceOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/tech-support-job-harvester": {
      "post": {
        "description": "Harvest all Analysis jobs and send data to PacBio Tech Support",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Tech Support Job Harvester bundle options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TsSystemStatusServiceOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/db-backup": {
      "post": {
        "description": "Save a local backup copy of the SMRT Link Postgres database",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Database backup job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DbBackUpServiceJobOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/jobs/{type}": {
      "get": {
        "description": "Return a list of jobs of the specified type",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of jobs",
            "schema": {
              "$ref": "#/definitions/ServiceJobs"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path",
            "description": "Job type ID e.g. 'pbsmrtpipe'"
          },
          {
            "required": false,
            "type": "boolean",
            "name": "isActive",
            "in": "query",
            "default": true,
            "description": "Job isActive QueryFilter e.g., 'isActive=true' 'isActive=false'. By default only active (i.e., non-soft-deleted) jobs are returned"
          },
          {
            "required": false,
            "type": "integer",
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return (sorted by descending order of ID)"
          },
          {
            "required": false,
            "type": "integer",
            "name": "marker",
            "in": "query",
            "description": "The offset of the number of records to return"
          },
          {
            "required": false,
            "type": "integer",
            "name": "id",
            "in": "query",
            "description": "Job id Numeric QueryFilter e.g., '1' or 'in:1,2,3', 'gt:7'"
          },
          {
            "required": false,
            "type": "string",
            "name": "uuid",
            "in": "query",
            "description": "Job UUID QueryFilter e.g., 'bed09210-272b-11e8-b223-e3d877ad877e' or 'in:bed09210-272b-11e8-b223-e3d877ad877e,ca234090-272b-11e8-abef-0773aed21b78'"
          },
          {
            "required": false,
            "type": "string",
            "name": "name",
            "in": "query",
            "description": "Job name String QueryFilter e.g., 'alpha' or 'in:alpha,beta'"
          },
          {
            "required": false,
            "type": "string",
            "name": "comment",
            "in": "query",
            "description": "Job comments String QueryFilter e.g., 'alpha' or 'in:alpha,beta'"
          },
          {
            "required": false,
            "type": "string",
            "name": "createdAt",
            "in": "query",
            "description": "Job createdAt DateTime QueryFilter e.g., '2018-03-14T00:13:26.693Z' or 'gt:2018-03-14T00:13:26.693Z', 'lte:2018-03-14T00:13:26.693Z' (datetime must be specified using ISO8601 format)"
          },
          {
            "required": false,
            "type": "string",
            "name": "updatedAt",
            "in": "query",
            "description": "Job updatedAt DateTime QueryFilter e.g., '2018-03-14T00:13:26.693Z' or 'gt:2018-03-14T00:13:26.693Z', 'lte:2018-03-14T00:13:26.693Z' (datetime must be specified using ISO8601 format)"
          },
          {
            "required": false,
            "type": "string",
            "name": "jobUpdatedAt",
            "in": "query",
            "description": "Job jobUpdatedAt DateTime QueryFilter e.g., '2018-03-14T00:13:26.693Z' or 'gt:2018-03-14T00:13:26.693Z', 'lte:2018-03-14T00:13:26.693Z' (datetime must be specified using ISO8601 format)"
          },
          {
            "required": false,
            "type": "string",
            "name": "state",
            "in": "query",
            "description": "Job state QueryFilter, e.g. 'SUCCESSFUL' or 'in:FAILED,TERMINATED'"
          },
          {
            "required": false,
            "type": "string",
            "name": "path",
            "in": "query",
            "description": "Job path String QueryFilter e.g., '/path/to/jobs/000/000001'.  Note, these need to be URL encoded"
          },
          {
            "required": false,
            "type": "string",
            "name": "createdBy",
            "in": "query",
            "description": "Job createdBy String QueryFilter, e.g. 'Alice' or 'in:Alice,Bob'"
          },
          {
            "required": false,
            "type": "string",
            "name": "createdByEmail",
            "in": "query",
            "description": "Job createdByEmail String QueryFilter, e.g. 'user@university.edu'"
          },
          {
            "required": false,
            "type": "string",
            "name": "smrtlinkVersion",
            "in": "query",
            "description": "Job smrtlinkVersion String QueryFilter, e.g. '5.1.0.23456'"
          },
          {
            "required": false,
            "type": "string",
            "name": "errorMessage",
            "in": "query",
            "description": "Job errorMessage String QueryFilter"
          },
          {
            "required": false,
            "type": "integer",
            "name": "parentMultiJobId",
            "in": "query",
            "description": "Job parentMultiJobId Numeric QueryFilter e.g., '1' or 'in:1,2,3', 'gt:7'"
          },
          {
            "required": false,
            "type": "string",
            "name": "importedAt",
            "in": "query",
            "description": "Job importedAt DateTime QueryFilter e.g., '2018-03-14T00:13:26.693Z' or 'gt:2018-03-14T00:13:26.693Z', 'lte:2018-03-14T00:13:26.693Z' (datetime must be specified using ISO8601 format)"
          },
          {
            "required": false,
            "type": "string",
            "name": "subJobTypeId",
            "in": "query",
            "description": "Job subJobTypeId query filter, e.g. 'pbsmrtpipe.pipelines.sa3_sat'"
          },
          {
            "required": false,
            "type": "integer",
            "name": "projectId",
            "in": "query",
            "description": "Job projectId filter"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/job-manager/jobs/{type}/{job-id}/datastore/{uuid}/download": {
      "get": {
        "description": "Download the job datastore file with the given UUID",
        "x-scope": "data-management",
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Raw file contents"
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/job-manager/jobs/{type}/{job-id}/datastore": {
      "get": {
        "description": "Get the PacBio DataStore associated with a specific Job by Job Id or UUID",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of datastore files",
            "schema": {
              "$ref": "#/definitions/DataStoreFiles"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "description": "Job Int Id or UUID",
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/job-manager/jobs/{type}/{job-id}/datastore/{uuid}": {
      "get": {
        "description": "Get a Service DataStore File by DataStoreFile UUID",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Datastore file record",
            "schema": {
              "$ref": "#/definitions/DataStoreFile"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/job-manager/jobs/{type}/{job-id}/events": {
      "get": {
        "description": "Get a list of Events associated with a specific Job",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Job event record",
            "schema": {
              "$ref": "#/definitions/JobEvent"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/job-manager/jobs/{type}/{job-id}/tasks": {
      "post": {
        "description": "Add a task for the specified job",
        "parameters": [
          {
            "description": "Job Type Id (e.g., pbsmrtpipe, merge-datasets, import-datasets",
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "description": "Job Id as Int or UUID",
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New task request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateJobTaskRecord"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Return value"
          },
          "201": {
            "description": "New job task",
            "schema": {
              "$ref": "#/definitions/JobTask"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      },
      "get": {
        "description": "Get a list of sub-computation units (i.e., a task)",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Return a list of JobTask instances",
            "schema": {
              "$ref": "#/definitions/JobTasks"
            }
          }
        },
        "parameters": [
          {
            "description": "Job Type Id (e.g., pbsmrtpipe, merge-datasets, import-datasets",
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "description": "Job Id as Int or UUID",
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/job-manager/jobs/{type}/{job-id}/tasks/{task-uuid}": {
      "put": {
        "description": "Update the state of Job subtask",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Return updated JobTask",
            "schema": {
              "$ref": "#/definitions/JobTask"
            }
          }
        },
        "parameters": [
          {
            "description": "Job Type Id (e.g., pbsmrtpipe, merge-datasets, import-datasets",
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "description": "Job Id as Int or UUID",
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          },
          {
            "description": "Task Globally unique identifier as a UUID",
            "required": true,
            "type": "string",
            "name": "task-uuid",
            "in": "path"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update task request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateJobTaskRecord"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      },
      "get": {
        "description": "Get Job subtask by task UUID",
        "responses": {
          "default": {
            "description": "Failed to find Job Id, task UUID or job type "
          },
          "201": {
            "description": "Return a JobTask instance",
            "schema": {
              "$ref": "#/definitions/JobTask"
            }
          }
        },
        "parameters": [
          {
            "description": "Job Type Id (e.g., pbsmrtpipe, merge-datasets, import-datasets",
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "description": "Job Id as Int or UUID",
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          },
          {
            "description": "Task Globally unique identifier as a UUID",
            "required": true,
            "type": "string",
            "name": "task-uuid",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/job-manager/jobs/{type}/{job-id}/options": {
      "get": {
        "description": "Get the options used to created the Job. The returned model will depend on job-type",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Pipeline options JSON, corresponding to the jsonSettings field of the ServiceJob model"
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/job-manager/jobs/{type}/{job-id}/children": {
      "get": {
        "description": "Get a list of Children jobs of this parent job",
        "x-scope": "data-management",
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of child jobs",
            "schema": {
              "$ref": "#/definitions/ServiceJobs"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "id",
            "in": "query"
          }
        ],
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/job-manager/jobs/{type}/{job-id}/reports": {
      "get": {
        "description": "Get a list of ServiceReport files generated from a job",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of datastore report files",
            "schema": {
              "$ref": "#/definitions/DataStoreReportFiles"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/job-manager/jobs/{type}/{job-id}/reports/{uuid}": {
      "get": {
        "description": "Get a PacBio Report by UUID from a SMRT Link Job. If the Job type or job id doesn't exist, a 404 will be returned",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Report JSON; see https://github.com/PacificBiosciences/pbcommand/blob/master/pbcommand/schemas/pbreport.avsc for complete specification"
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/job-manager/jobs/{type}/{job-id}/reports/{uuid}/resources": {
      "get": {
        "description": "Get a Report resource (png) using the (relative path) file name of the resource",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Return the Report Resource"
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "relpath",
            "in": "query"
          }
        ],
        "produces": [
          "image/png"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/job-manager/jobs/{type}/{job-id}": {
      "get": {
        "description": "Get a job by Integer ID or UUID",
        "responses": {
          "default": {
            "schema": {
              "$ref": "#/definitions/SmrtServerError"
            },
            "examples": {
              "httpCode": 404,
              "message": "Unable to find JobId 66666",
              "errorType": "Not Found"
            },
            "description": "Error Message. Unable to find job or job type is invalid"
          },
          "200": {
            "description": "Returns a SMRT Link Service Job",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          }
        },
        "parameters": [
          {
            "description": "Job type (e.g., pbsmrtpipe, import-dataset, merge-dataset",
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "description": "Job id and Integer or UUID",
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      },
      "put": {
        "description": "Update a job",
        "responses": {
          "default": {
            "schema": {
              "$ref": "#/definitions/SmrtServerError"
            },
            "examples": {
              "httpCode": 404,
              "message": "Unable to find JobId 66666",
              "errorType": "Not Found"
            },
            "description": "Error Message. Unable to find job or job type is invalid"
          },
          "200": {
            "description": "Returns a SMRT Link Service Job",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          }
        },
        "parameters": [
          {
            "description": "Job type (e.g., pbsmrtpipe, import-dataset, merge-dataset",
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "description": "Job id and Integer or UUID",
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Job update object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateJobRecord"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/job-manager/jobs/pbsmrtpipe/{job-id}/terminate": {
      "post": {
        "description": "Terminate a running pbsmrtpipe analysis job",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Server message",
            "schema": {
              "$ref": "#/definitions/MessageResponse"
            }
          }
        },
        "parameters": [
          {
            "description": "Job Id as an Int",
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/job-manager/jobs/{type}/{job-id}/entry-points": {
      "get": {
        "description": "Get the DataSet Entry Points used as inputs to the Job (if any were provided)",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of job entry points",
            "schema": {
              "$ref": "#/definitions/EngineJobEntryPoints"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "type",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "data-management",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited"
      }
    },
    "/smrt-link/job-manager/multi-jobs/multi-analysis": {
      "get": {
        "description": "Returns a list of EngineMultiJobs for the `multi-analysis` Multi-Job type.",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      },
      "post": {
        "description": "Create and START a multi-job using one or more deferred jobs",
        "responses": {
          "201": {
            "description": "New job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          },
          "default": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Def job options object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiAnalysisJobOptions"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "x-scope": "analysis",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/smrt-link/job-manager/multi-jobs/multi-analysis/{job-id}": {
      "get": {
        "description": "Get a EngineMultiJob for the `multi-analysis` Multi-Job type by job Id",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      },
      "put": {
        "description": "Update the job settings for the `multi-analysis` Multi-Job type by job Id. Updating is ONLY supported for jobs in the CREATED state",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Modified job object",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      },
      "delete": {
        "description": "Delete an `multi-analysis` Multi-Job type by job Id. Delete is ONLY supported for jobs in the CREATED state",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Return value",
            "schema": {
              "$ref": "#/definitions/ServiceJob"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/job-manager/multi-jobs/multi-analysis/{job-id}/jobs": {
      "get": {
        "description": "Get the Child Core Jobs that are generated from the Multi-Job",
        "x-scope": "data-management",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "job-id",
            "in": "path"
          }
        ],
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "List of child jobs",
            "schema": {
              "$ref": "#/definitions/ServiceJobs"
            }
          }
        },
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/datastore-files/{uuid}/download": {
      "get": {
        "description": "Download the datastore file with the specified UUID",
        "x-scope": "data-management",
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Raw file contents"
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "required": false,
            "type": "string",
            "name": "prefix",
            "in": "query",
            "description": "Prefix to prepend the base download filename."
          }
        ],
        "x-auth-type": "None"
      }
    },
    "/smrt-link/datastore-files/{uuid}/resources": {
      "get": {
        "description": "Retrieve a resource associated with a datastore file (e.g. images accompanying reports) by relative path",
        "x-scope": "data-management",
        "x-throttling-tier": "Unlimited",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "200": {
            "description": "Return value"
          }
        },
        "parameters": [
          {
            "required": true,
            "type": "string",
            "name": "uuid",
            "in": "path"
          },
          {
            "required": true,
            "type": "string",
            "name": "relpath",
            "in": "query"
          }
        ],
        "x-auth-type": "Application & Application User"
      }
    },
    "/smrt-link/uploader": {
      "post": {
        "summary": "Upload a File to SMRT Link",
        "description": "Upload file (e.g., fasta or ZIP DataSet XML)",
        "responses": {
          "default": {
            "description": "Return value"
          },
          "201": {
            "description": "Returns a Path to the upload file on the server",
            "schema": {
              "$ref": "#/definitions/UploadedFile"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "UploadedFile": {
      "type": "object",
      "title": "Uploaded File",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path to output file",
          "description": "The output path to file on the server"
        }
      },
      "example": {
        "path": "/path/to/file.fasta"
      }
    },
    "PipelineTemplateViewRules": {
      "title": "List of Pipeline Template View Rules",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PipelineTemplateViewRule"
      }
    },
    "PipelineTemplateViewRule": {
      "type": "object",
      "title": "Pipeline Template View Rules",
      "description": "A list of the view rules for each pipeline.",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Pipeline ID"
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Pipeline Name"
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Path to base directory of SMRT Server"
        },
        "taskOptions": {
          "type": "array",
          "title": "Task Options",
          "description": "Task-level options available for the pipeline",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "hidden": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "taskOptions"
      ],
      "example": {
        "id": "pbsmrtpipe.pipelines.sa3_sat",
        "name": "Override Pipeline Display Name",
        "description": "Override Description",
        "taskOptions": [
          {
            "id": "pbreports.task_options.max_contigs",
            "hidden": true
          },
          {
            "id": "pbcommand.task_options.dev_hello",
            "hidden": true
          }
        ]
      }
    },
    "DatasetTypes": {
      "type": "array",
      "title": "Dataset Types",
      "description": "A list of the dataset types in SMRT Link",
      "items": {
        "$ref": "#/definitions/DatasetType"
      }
    },
    "DatasetType": {
      "description": "Metadata about a dataset type",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of the dataset"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Datestamp when database record was last updated"
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description of the dataset type"
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Dataset type ID"
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Datestamp when database record was created"
        },
        "shortName": {
          "type": "string",
          "title": "Short Name",
          "description": "Shortened name of the dataset type"
        }
      },
      "required": [
        "name",
        "updatedAt",
        "description",
        "id",
        "createdAt",
        "shortName"
      ],
      "example": {
        "name": "Display name for PacBio.DataSet.AlignmentSet",
        "updatedAt": "2016-01-22T21:21:10.293Z",
        "description": "Description for PacBio.DataSet.AlignmentSet",
        "id": "PacBio.DataSet.AlignmentSet",
        "createdAt": "2016-01-22T21:21:10.293Z",
        "shortName": "alignments"
      }
    },
    "FileResource": {
      "properties": {
        "fullPath": {
          "type": "string",
          "title": "Full path",
          "description": "Full path of the file"
        },
        "name": {
          "type": "string",
          "title": "File name",
          "description": "Base file name"
        },
        "mimeType": {
          "type": "string",
          "title": "Mime type"
        },
        "sizeInBytes": {
          "type": "integer",
          "title": "Size (bytes)"
        },
        "sizeReadable": {
          "type": "string",
          "title": "File size",
          "description": "Human-readable file-size string"
        }
      }
    },
    "DirectoryResource": {
      "description": "Specifies the contents of a given directory",
      "properties": {
        "fullPath": {
          "type": "string",
          "title": "Full path",
          "description": "Full path of the directory"
        },
        "subDirectories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DirectoryResource"
          }
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileResource"
          }
        }
      }
    },
    "DiskSpaceResources": {
      "type": "array",
      "title": "List of disk space resources",
      "description": "List of disk space info for server resources",
      "items": {
        "$ref": "#/definitions/DiskSpace"
      }
    },
    "DiskSpace": {
      "type": "object",
      "title": "SMRT Server Disk Space",
      "description": "An summary of the SMRT Server disk usage.",
      "properties": {
        "path": {
          "type": "string",
          "title": "Server Path",
          "description": "Path to base directory of SMRT Server"
        },
        "totalSpace": {
          "type": "integer",
          "title": "Total Space",
          "description": "Total disk Space available for SMRT Server directory (e.g., job directory, tmp space, root dir)"
        },
        "id": {
          "type": "string",
          "title": "Resource ID",
          "description": "Resource id (e.g., smrtlink.resources.jobs_root, or smrtlink.resources.root)"
        },
        "usableSpace": {
          "type": "integer",
          "title": "Usable Disk Space",
          "description": "Total free disk space available for SMRT Server"
        },
        "freeSpace": {
          "type": "integer",
          "title": "Free Disk Space",
          "description": "Total free disk space available for SMRT Server"
        }
      },
      "required": [
        "path",
        "totalSpace",
        "id",
        "usableSpace",
        "freeSpace"
      ],
      "example": {
        "path": "/",
        "totalSpace": 121626710016,
        "id": "smrtlink.resources.root",
        "usableSpace": 112911650816,
        "freeSpace": 119113555968
      }
    },
    "DataSetMetaDataSet": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "uuid": {
          "type": "string",
          "title": "UUID",
          "description": "Unique Identifier"
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Dataset name"
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Dataset XML path"
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Datestamp when database record was created"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Datestamp when database record was last updated"
        },
        "importedAt": {
          "type": "string",
          "title": "Imported At",
          "description": "Date the dataset was imported into SMRT Link"
        },
        "numRecords": {
          "type": "integer",
          "title": "Number of Records",
          "description": "Number of records in the dataset"
        },
        "totalLength": {
          "type": "integer",
          "title": "Total Length",
          "description": "Sum of lengths of all records (usually the total number of bases)"
        },
        "tags": {
          "type": "string",
          "title": "Tags",
          "description": "Tags for the dataset. These should be ',' separated values"
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Dataset version, indicates revisions to the SMRT Link record and/or the XML file"
        },
        "comments": {
          "type": "string",
          "title": "Comments",
          "description": "Miscellaneous comments"
        },
        "md5": {
          "type": "string",
          "title": "MD5 checksum",
          "description": "MD5 checksum to check file integrity"
        },
        "createdBy": {
          "type": [
            "string",
            "null"
          ],
          "title": "Created by",
          "description": "User ID responsible for importing the dataset"
        },
        "jobId": {
          "type": "integer",
          "title": "Job ID",
          "description": "ID of the job that created the database record for thie dataset"
        },
        "projectId": {
          "type": "integer",
          "title": "Project ID",
          "description": "Project ID"
        },
        "isActive": {
          "type": "boolean",
          "title": "Is active",
          "description": "Setting this value to false marks it as deleted and excludes it from the default listing"
        },
        "numChildren": {
          "type": "integer",
          "title": "Number of Children",
          "description": "Total Number (active + inactive) Children datasets",
          "default": 0
        }
      }
    },
    "AlignmentSetDetails": {
      "type": "object",
      "title": "AlignmentSet Details",
      "description": "Details for a single alignmentset",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Dataset name"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Datestamp when database record was last updated"
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Dataset XML path"
        },
        "tags": {
          "type": "string",
          "title": "Tags",
          "description": "Comma-separated list of tags",
          "example": "mapped,subreads"
        },
        "uuid": {
          "type": "string",
          "title": "UUID",
          "description": "Unique ID"
        },
        "totalLength": {
          "type": "integer",
          "title": "Total Length",
          "description": "Sum of lengths of all records"
        },
        "projectId": {
          "type": "integer",
          "title": "Project ID",
          "description": "Project ID associated with this dataset"
        },
        "numRecords": {
          "type": "integer",
          "title": "Number of Records",
          "description": "Number of records in the dataset"
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Dataset version, indicates revisions to the SMRT Link record and/or the XML file"
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Positive integer ID"
        },
        "md5": {
          "type": "string",
          "title": "MD5",
          "description": "MD5 checksum"
        },
        "jobId": {
          "type": "integer",
          "title": "Job ID",
          "description": "ID of the job that created the database record for thie dataset"
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Datestamp when database record was created"
        },
        "importedAt": {
          "type": "string",
          "title": "Imported At",
          "description": "Date the dataset was imported into SMRT Link"
        },
        "userId": {
          "type": "string",
          "title": "User ID",
          "description": "ID of user that created the record"
        },
        "datasetType": {
          "type": "string",
          "title": "Dataset Type",
          "description": "Dataset metatype field",
          "example": "PacBio.DataSet.AlignmentSet"
        },
        "comments": {
          "type": "string",
          "title": "Comments",
          "description": "Comments associated with the dataset"
        },
        "numChildren": {
          "type": "integer",
          "title": "Number of Children",
          "description": "Total Number (active + inactive) Children datasets",
          "default": 0
        }
      },
      "required": [
        "name",
        "updatedAt",
        "importedAt",
        "path",
        "tags",
        "uuid",
        "totalLength",
        "projectId",
        "numRecords",
        "version",
        "id",
        "md5",
        "jobId",
        "createdAt",
        "userId",
        "datasetType",
        "comments"
      ],
      "example": {
        "name": "pacbio_dataset_alignmentset-160202_223320635",
        "updatedAt": "2016-02-02T22:34:38.534Z",
        "importedAt": "2016-02-02T22:34:38.534Z",
        "path": "/pbi/analysis/smrtlink/release/smrtsuite/userdata/jobs_root/000/000003/tasks/pbsmrtpipe.tasks.gather_alignmentset-1/file.alignmentset.xml",
        "tags": "",
        "uuid": "ee7d9225-d834-01b0-0488-b0bda263e085",
        "totalLength": 13757246,
        "projectId": 1,
        "numRecords": 17864,
        "version": "3.0.1",
        "id": 3,
        "md5": "fcb02727aea5fe640ec7d6e5904205e3",
        "jobId": 3,
        "createdAt": "2016-02-02T22:34:38.534Z",
        "userId": 1,
        "datasetType": "PacBio.DataSet.AlignmentSet",
        "comments": "alignment dataset converted"
      }
    },
    "HdfSubreadSetDetails": {
      "type": "object",
      "title": "HdfSubreadSet Details",
      "description": "Details for a single hdfsubreads",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Dataset name"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Datestamp when database record was last updated"
        },
        "importedAt": {
          "type": "string",
          "title": "Imported At",
          "description": "Date the dataset was imported into SMRT Link"
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Dataset XML path"
        },
        "tags": {
          "type": "string",
          "title": "Tags",
          "description": "Comma-separated list of tags"
        },
        "instrumentName": {
          "type": "string",
          "title": "Instrument Name",
          "description": "Name of RS II instrument that generated the data"
        },
        "uuid": {
          "type": "string",
          "title": "UUID",
          "description": "Unique ID"
        },
        "totalLength": {
          "type": "integer",
          "title": "Total Length",
          "description": "Sum of lengths of all records"
        },
        "projectId": {
          "type": "integer",
          "title": "Project ID",
          "description": "ID of project associated with this dataset"
        },
        "numRecords": {
          "type": "integer",
          "title": "Number of Records",
          "description": "Number of records in the dataset"
        },
        "wellSampleName": {
          "type": "string",
          "title": "Well Sample Name",
          "description": "Name of the physical sample loaded"
        },
        "bioSampleName": {
          "type": "string",
          "title": "Biological Sample Name",
          "description": "Biologically relevant sample name"
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Dataset version, indicates revisions to the SMRT Link record and/or the XML file"
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Positive integer ID"
        },
        "md5": {
          "type": "string",
          "title": "MD5",
          "description": "MD5 checksum"
        },
        "jobId": {
          "type": "string",
          "title": "Job ID",
          "description": "ID of the job that created the database record for thie dataset"
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Datestamp when database record was created"
        },
        "wellName": {
          "type": "string",
          "title": "Well Name",
          "description": "Physical sample well name"
        },
        "cellIndex": {
          "type": "integer",
          "title": "Cell Index",
          "description": "Index of the cell within a run"
        },
        "userId": {
          "type": "integer",
          "title": "User ID",
          "description": "ID of user that created the record"
        },
        "metadataContextId": {
          "type": "string",
          "title": "Metadata Context ID",
          "description": "Automatically generated movie ID with datestamp",
          "example": "m150404_101626_42267_c100807920800000001823174110291514_s1_p0"
        },
        "runName": {
          "type": "string",
          "title": "Run Name",
          "description": "Name of the instrument run that generated this dataset"
        },
        "datasetType": {
          "type": "string",
          "title": "Dataset Type",
          "description": "Dataset metatype field",
          "example": "PacBio.DataSet.HdfSubreadSet"
        },
        "comments": {
          "type": "string",
          "title": "Comments",
          "description": "Miscellaneous comments"
        },
        "parentUuid": {
          "type": [
            "string",
            "null"
          ],
          "title": "Parent DataSet UUID",
          "description": "Parent DataSet UUID"
        },
        "numChildren": {
          "type": "integer",
          "title": "Number of Children",
          "description": "Total Number (active + inactive) Children datasets",
          "default": 0
        }
      },
      "required": [
        "name",
        "updatedAt",
        "importedAt",
        "path",
        "tags",
        "instrumentName",
        "uuid",
        "totalLength",
        "projectId",
        "numRecords",
        "wellSampleName",
        "bioSampleName",
        "version",
        "id",
        "md5",
        "jobId",
        "createdAt",
        "wellName",
        "cellIndex",
        "userId",
        "metadataContextId",
        "runName",
        "datasetType",
        "comments",
        "parentUuid",
        "numChildren"
      ],
      "example": {
        "name": "Convert-movie",
        "updatedAt": "2016-03-04T14:15:00.653Z",
        "importedAt": "2016-02-02T22:34:38.534Z",
        "path": "/home/UNIXHOME/ckonig/Cologne_CCS2_201603/B01_1/m160119_004643_42207_c100947812550000001823211506101611_s1_p0.hdfsubreadset.xml",
        "tags": "pacbio.secondary.instrument=RS",
        "instrumentName": "42207",
        "uuid": "6d70714c-2538-46cc-9216-4f8fb7bc6361",
        "totalLength": 50000000,
        "projectId": 1,
        "numRecords": 150000,
        "wellSampleName": "1932.A",
        "bioSampleName": "1932.A",
        "version": "3.0.1",
        "id": 13,
        "md5": "9fbad9d0a65836a9b8f9d504c01b8f46",
        "jobId": 7,
        "createdAt": "2016-03-04T14:15:00.653Z",
        "wellName": "B01",
        "cellIndex": 1,
        "userId": 1,
        "metadataContextId": "m160119_004643_42207_c100947812550000001823211506101611_s1_p0",
        "runName": "Run_0121",
        "datasetType": "PacBio.DataSet.HdfSubreadSet",
        "comments": ""
      }
    },
    "SubreadSetDetails": {
      "type": "object",
      "title": "SubreadSet Details",
      "description": "Details for a single subreadset",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Dataset name"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Datestamp when database record was last updated"
        },
        "isActive": {
          "default": true,
          "type": "boolean",
          "title": "Is Active",
          "description": "Flag to communicate if the DataSet is active. Soft-deleted DataSets will be marked as in active. In Active datasets will not be returned by default."
        },
        "importedAt": {
          "type": "string",
          "title": "Imported At",
          "description": "Date the dataset was imported into SMRT Link"
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Path of the dataset"
        },
        "tags": {
          "type": "string",
          "title": "Tags",
          "description": "Comma-separated list of tags",
          "example": "subreads"
        },
        "instrumentName": {
          "type": "string",
          "title": "Instrument Name",
          "description": "Name of the instrument that generated this dataset"
        },
        "uuid": {
          "type": "string",
          "title": "UUID",
          "description": "Unique ID"
        },
        "totalLength": {
          "type": "integer",
          "title": "Total Length",
          "description": "Sum of lengths of all records (usually the total number of bases)"
        },
        "projectId": {
          "type": "integer",
          "title": "Project ID",
          "description": "Project ID associated with this dataset"
        },
        "numRecords": {
          "type": "integer",
          "title": "Number of Records",
          "description": "Number of records in the dataset"
        },
        "wellSampleName": {
          "type": "string",
          "title": "Well Sample Name",
          "description": "Name of the physical sample loaded"
        },
        "bioSampleName": {
          "type": "string",
          "title": "Biological Sample Name",
          "description": "Biological sample name"
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Dataset version, indicates revisions to the SMRT Link record and/or the XML file"
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Integer ID"
        },
        "md5": {
          "type": "string",
          "title": "MD5",
          "description": "MD5 checksum"
        },
        "jobId": {
          "type": "integer",
          "title": "Job ID",
          "description": "ID of the job that created the database record for thie dataset"
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Datestamp when database record was created"
        },
        "wellName": {
          "type": "string",
          "title": "Well Name",
          "description": "Physical sample name"
        },
        "cellIndex": {
          "type": "integer",
          "title": "Cell Index",
          "description": "ID of the cell within an instrument run"
        },
        "userId": {
          "type": "integer",
          "title": "User ID",
          "description": "ID of user that created the record"
        },
        "metadataContextId": {
          "type": "string",
          "title": "Metadata Context ID",
          "description": "Automatically generated movie ID with datestamp",
          "example": "m54001_20180101_120101"
        },
        "runName": {
          "type": "string",
          "title": "Run Name",
          "description": "Name of the instrument run that generated this dataset"
        },
        "dnaBarcodeName": {
          "type": [
            "string",
            "null"
          ],
          "title": "DNA Barcode Name",
          "description": "Barcode labels (may be null or multiple)"
        },
        "parentUuid": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "title": "Parent DataSet UUID",
          "description": "UUID of parent Dataset (if any)"
        },
        "datasetType": {
          "type": "string",
          "title": "Dataset Type",
          "description": "Dataset metatype field",
          "example": "PacBio.DataSet.SubreadSet"
        },
        "comments": {
          "type": "string",
          "title": "Comments",
          "description": "Miscellaneous comments"
        },
        "numChildren": {
          "type": "integer",
          "title": "Number of Children",
          "description": "Total Number (active + inactive) Children datasets",
          "default": 0
        }
      },
      "required": [
        "name",
        "updatedAt",
        "importedAt",
        "path",
        "tags",
        "instrumentName",
        "uuid",
        "totalLength",
        "projectId",
        "numRecords",
        "wellSampleName",
        "bioSampleName",
        "version",
        "id",
        "md5",
        "jobId",
        "createdAt",
        "wellName",
        "cellIndex",
        "userId",
        "metadataContextId",
        "runName",
        "datasetType",
        "comments",
        "isActive",
        "numChildren"
      ],
      "example": {
        "name": "07-26-2016_SMS_FleaVal_A11_SIRV-E0_150pM_onchip_6hrMovie",
        "updatedAt": "2016-12-02T23:34:58.660Z",
        "importedAt": "2016-02-02T22:34:38.534Z",
        "path": "/pbi/collections/315/3150315/r54011_20160727_001907/1_A01/m54011_160727_002259.subreadset.xml",
        "tags": "subreadset",
        "instrumentName": "Alpha11",
        "uuid": "146338e0-7ec2-4d2d-b938-11bce71b7ed1",
        "totalLength": 5032258698,
        "projectId": 1,
        "numRecords": 4867222,
        "wellSampleName": "SMS_FleaVal_SIRV-E0_150pM_onchip_6hrMovie",
        "bioSampleName": "unknown",
        "version": "3.0.1",
        "id": 4413,
        "md5": "5657aa955ce13afddc8a1e22a8a20b9b",
        "jobId": 3200,
        "createdAt": "2016-12-02T23:34:58.660Z",
        "wellName": "A01",
        "cellIndex": 0,
        "userId": 1,
        "metadataContextId": "m54011_160727_002259",
        "runName": "07-26-2016_SMS_FleaVal_A11_SIRV-E0_150pM_onchip_6hrMovie",
        "datasetType": "PacBio.DataSet.SubreadSet",
        "comments": " ",
        "isActive": true
      }
    },
    "BarcodeSetDetails": {
      "type": "object",
      "title": "BarcodeSet Details",
      "description": "Details for a single barcodeset",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Dataset name"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Datestamp when database record was last updated"
        },
        "importedAt": {
          "type": "string",
          "title": "Imported At",
          "description": "Date the dataset was imported into SMRT Link"
        },
        "isActive": {
          "default": true,
          "type": "boolean",
          "title": "Is Active",
          "description": "Flag to communicate if the DataSet is active. Soft-deleted DataSets will be marked as in active. In Active datasets will not be returned by default."
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Dataset XML path"
        },
        "tags": {
          "type": "string",
          "title": "Tags",
          "description": "Comma-separated list of tags"
        },
        "uuid": {
          "type": "string",
          "title": "UUID",
          "description": "Unique ID"
        },
        "totalLength": {
          "type": "integer",
          "title": "Total Length",
          "description": "Sum of lengths of all records (usually the total number of bases)"
        },
        "projectId": {
          "type": "integer",
          "title": "Project ID",
          "description": "Project ID associated with this dataset"
        },
        "numRecords": {
          "type": "integer",
          "title": "Number of Records",
          "description": "Number of records in the dataset"
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Dataset version, indicates revisions to the SMRT Link record and/or the XML file"
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Integer ID"
        },
        "md5": {
          "type": "string",
          "title": "MD5",
          "description": "MD5 checksum"
        },
        "jobId": {
          "type": "integer",
          "title": "Job ID",
          "description": "ID of the job that created the database record for thie dataset"
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Datestamp when database record was created"
        },
        "userId": {
          "type": "string",
          "title": "integer",
          "description": "ID of user that created the record"
        },
        "datasetType": {
          "type": "string",
          "title": "Dataset Type",
          "description": "Dataset metatype field",
          "example": "PacBio.DataSet.BarcodeSet"
        },
        "comments": {
          "type": "string",
          "title": "Comments",
          "description": "Miscellaneous comments"
        },
        "parentUuid": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "title": "Parent DataSet UUID",
          "description": "UUID of parent Dataset (if any)"
        },
        "numChildren": {
          "type": "integer",
          "title": "Number of Children",
          "description": "Total Number (active + inactive) Children datasets",
          "default": 0
        }
      },
      "required": [
        "name",
        "updatedAt",
        "importedAt",
        "path",
        "tags",
        "uuid",
        "totalLength",
        "projectId",
        "numRecords",
        "version",
        "id",
        "md5",
        "jobId",
        "createdAt",
        "userId",
        "datasetType",
        "comments",
        "isActive",
        "numChildren"
      ],
      "example": {
        "name": "pacbio_barcode_adapters_96",
        "updatedAt": "2016-07-13T20:32:48.349Z",
        "importedAt": "2016-02-02T22:34:38.534Z",
        "path": "/pbi/dept/secondary/siv/barcodes/pacbio_barcodes_96_revcomp/pacbio_barcodes_96_revcomp.barcodeset.xml",
        "tags": "",
        "uuid": "bee0488f-49a6-0505-e89a-2579411804b8",
        "totalLength": 1536,
        "projectId": 1,
        "numRecords": 96,
        "version": "3.0.1",
        "id": 459,
        "md5": "f1b6141bbf206d30c90ffee083c25678",
        "jobId": 411,
        "createdAt": "2016-07-13T20:32:48.349Z",
        "userId": 1,
        "datasetType": "PacBio.DataSet.BarcodeSet",
        "comments": "Barcode  imported",
        "isActive": true
      }
    },
    "ConsensusAlignmentSet": {
      "type": "object",
      "title": "ConsensusAlignmentSet Details",
      "description": "Details for a single ConsensusAlignmentSet",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Dataset name"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Datestamp when database record was last updated"
        },
        "importedAt": {
          "type": "string",
          "title": "Imported At",
          "description": "Date the dataset was imported into SMRT Link"
        },
        "isActive": {
          "default": true,
          "type": "boolean",
          "title": "Is Active",
          "description": "Flag to communicate if the DataSet is active. Soft-deleted DataSets will be marked as in active. In Active datasets will not be returned by default."
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Dataset XML path"
        },
        "tags": {
          "type": "string",
          "title": "Tags",
          "description": "Comma-separated list of tags",
          "example": "ccs,mapped"
        },
        "uuid": {
          "type": "string",
          "title": "UUID",
          "description": "Unique ID"
        },
        "totalLength": {
          "type": "integer",
          "title": "Total Length",
          "description": "Sum of lengths of all records (usually the total number of bases)"
        },
        "projectId": {
          "type": "integer",
          "title": "Project ID",
          "description": "Project ID associated with this dataset"
        },
        "numRecords": {
          "type": "integer",
          "title": "Number of Records",
          "description": "Number of records in the dataset"
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Dataset version, indicates revisions to the SMRT Link record and/or the XML file"
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Integer ID"
        },
        "md5": {
          "type": "string",
          "title": "MD5",
          "description": "MD5 checksum"
        },
        "jobId": {
          "type": "integer",
          "title": "Job ID",
          "description": "ID of the job that created the database record for thie dataset"
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Datestamp when database record was created"
        },
        "userId": {
          "type": "string",
          "title": "integer",
          "description": "ID of user that created the record"
        },
        "datasetType": {
          "type": "string",
          "title": "Dataset Type",
          "description": "Dataset metatype field",
          "example": "PacBio.DataSet.ConsensusAlignmentSet"
        },
        "comments": {
          "type": "string",
          "title": "Comments",
          "description": "Miscellaneous comments"
        },
        "parentUuid": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "title": "Parent DataSet UUID",
          "description": "UUID of parent Dataset (if any)"
        },
        "numChildren": {
          "type": "integer",
          "title": "Number of Children",
          "description": "Total Number (active + inactive) Children datasets",
          "default": 0
        }
      },
      "required": [
        "name",
        "updatedAt",
        "importedAt",
        "path",
        "tags",
        "uuid",
        "totalLength",
        "projectId",
        "numRecords",
        "version",
        "id",
        "md5",
        "jobId",
        "createdAt",
        "userId",
        "datasetType",
        "comments",
        "isActive",
        "numChildren"
      ],
      "example": {
        "name": "pacbio_dataset_consensusalignmentset-161104_063043351",
        "updatedAt": "2016-11-04T06:32:04.982Z",
        "path": "/pbi/dept/secondary/siv/smrtlink/smrtlink-beta/smrtsuite_166987/userdata/jobs_root/041/041572/tasks/pbcoretools.tasks.gather_ccs_alignmentset-1/file.consensusalignmentset.xml",
        "tags": "",
        "uuid": "41dd6a1f-6088-61fe-0066-5b74ce073831",
        "totalLength": 14684586,
        "projectId": 1,
        "numRecords": 3515,
        "version": "3.0.1",
        "id": 68009,
        "md5": "db972a033f3181fa231688a360e7df0a",
        "jobId": 41572,
        "createdAt": "2016-11-04T06:32:04.982Z",
        "userId": 1,
        "datasetType": "PacBio.DataSet.ConsensusAlignmentSet",
        "comments": "ccs alignment dataset converted",
        "isActive": true,
        "numChildren": 0
      }
    },
    "ContigSetDetails": {
      "type": "object",
      "title": "ContigSet Details",
      "description": "Details for a single contigset",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Dataset name"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Datestamp when database record was last updated"
        },
        "importedAt": {
          "type": "string",
          "title": "Imported At",
          "description": "Date the dataset was imported into SMRT Link"
        },
        "isActive": {
          "default": true,
          "type": "boolean",
          "title": "Is Active",
          "description": "Flag to communicate if the DataSet is active. Soft-deleted DataSets will be marked as in active. In Active datasets will not be returned by default."
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Dataset XML path"
        },
        "tags": {
          "type": "string",
          "title": "Tags",
          "description": "Comma-separated list of tags"
        },
        "uuid": {
          "type": "string",
          "title": "UUID",
          "description": "Unique ID"
        },
        "totalLength": {
          "type": "integer",
          "title": "Total Length",
          "description": "Sum of lengths of all records (usually the total number of bases)"
        },
        "projectId": {
          "type": "integer",
          "title": "Project ID",
          "description": "Project ID associated with this dataset"
        },
        "numRecords": {
          "type": "integer",
          "title": "Number of Records",
          "description": "Number of records in the dataset"
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Dataset version, indicates revisions to the SMRT Link record and/or the XML file"
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Integer ID"
        },
        "md5": {
          "type": "string",
          "title": "MD5",
          "description": "MD5 checksum"
        },
        "jobId": {
          "type": "integer",
          "title": "Job ID",
          "description": "ID of the job that created the database record for thie dataset"
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Datestamp when database record was created"
        },
        "userId": {
          "type": "string",
          "title": "integer",
          "description": "ID of user that created the record"
        },
        "datasetType": {
          "type": "string",
          "title": "Dataset Type",
          "description": "Dataset metatype field",
          "example": "PacBio.DataSet.ContigSet"
        },
        "comments": {
          "type": "string",
          "title": "Comments",
          "description": "Miscellaneous comments"
        },
        "parentUuid": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "title": "Parent DataSet UUID",
          "description": "UUID of parent Dataset (if any)"
        },
        "numChildren": {
          "type": "integer",
          "title": "Number of Children",
          "description": "Total Number (active + inactive) Children datasets",
          "default": 0
        }
      },
      "required": [
        "name",
        "updatedAt",
        "importedAt",
        "path",
        "tags",
        "uuid",
        "totalLength",
        "projectId",
        "numRecords",
        "version",
        "id",
        "md5",
        "jobId",
        "createdAt",
        "userId",
        "datasetType",
        "comments",
        "isActive",
        "numChildren"
      ],
      "example": {
        "name": "pacbio_dataset_contigset-170123_234232277 AND pacbio_dataset_contigset-170123_234232286 AND pacbio_dataset_contigset-170123_234232283",
        "updatedAt": "2017-01-23T23:43:43.521Z",
        "importedAt": "2017-02-02T06:56:46.940Z",
        "path": "/pbi/analysis/smrtlink/release/smrtsuite/userdata/jobs_root/003/003805/tasks/pbcoretools.tasks.gather_contigset-1/file.contigset.xml",
        "tags": "",
        "uuid": "776bbba8-cb83-e46d-5228-ff02e449e3c4",
        "totalLength": 48502,
        "projectId": 1,
        "numRecords": 1,
        "version": "3.0.1",
        "id": 5379,
        "md5": "dd67945eea0d203625f0ef3cdafa86b6",
        "jobId": 3805,
        "createdAt": "2017-01-23T23:43:43.521Z",
        "userId": 1,
        "datasetType": "PacBio.DataSet.ContigSet",
        "comments": "contig dataset comments",
        "isActive": true
      }
    },
    "ConsensusReadDetails": {
      "type": "object",
      "title": "ConsensusRead Details",
      "description": "Details for a single ConsensusReadSet",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Dataset name"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Datestamp when database record was last updated"
        },
        "importedAt": {
          "type": "string",
          "title": "Imported At",
          "description": "Date the dataset was imported into SMRT Link"
        },
        "isActive": {
          "default": true,
          "type": "boolean",
          "title": "Is Active",
          "description": "Flag to communicate if the DataSet is active. Soft-deleted DataSets will be marked as in active. In Active datasets will not be returned by default."
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Dataset XML path"
        },
        "tags": {
          "type": "string",
          "title": "Tags",
          "description": "Comma-separated list of tags"
        },
        "uuid": {
          "type": "string",
          "title": "UUID",
          "description": "Unique ID"
        },
        "totalLength": {
          "type": "integer",
          "title": "Total Length",
          "description": "Sum of lengths of all records (usually the total number of bases)"
        },
        "projectId": {
          "type": "integer",
          "title": "Project ID",
          "description": "Project ID associated with this dataset"
        },
        "numRecords": {
          "type": "integer",
          "title": "Number of Records",
          "description": "Number of records in the dataset"
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Dataset version, indicates revisions to the SMRT Link record and/or the XML file"
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Integer ID"
        },
        "md5": {
          "type": "string",
          "title": "MD5",
          "description": "MD5 checksum"
        },
        "jobId": {
          "type": "integer",
          "title": "Job ID",
          "description": "ID of the job that created the database record for thie dataset"
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Datestamp when database record was created"
        },
        "userId": {
          "type": "string",
          "title": "integer",
          "description": "ID of user that created the record"
        },
        "datasetType": {
          "type": "string",
          "title": "Dataset Type",
          "description": "Dataset metatype field",
          "example": "PacBio.DataSet.ConsensusReadSet"
        },
        "comments": {
          "type": "string",
          "title": "Comments",
          "description": "Miscellaneous comments"
        },
        "parentUuid": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "title": "Parent DataSet UUID",
          "description": "UUID of parent Dataset (if any)"
        },
        "numChildren": {
          "type": "integer",
          "title": "Number of Children",
          "description": "Total Number (active + inactive) Children datasets",
          "default": 0
        }
      },
      "required": [
        "name",
        "updatedAt",
        "importedAt",
        "path",
        "tags",
        "uuid",
        "totalLength",
        "projectId",
        "numRecords",
        "version",
        "id",
        "md5",
        "jobId",
        "createdAt",
        "userId",
        "datasetType",
        "comments",
        "isActive",
        "numChildren"
      ],
      "example": {
        "name": "pacbio_dataset_consensusreadset-170202_060035163 AND pacbio_dataset_consensusreadset-170202_060041668 AND pacbio_dataset_consensusreadset-170202_060035188 AND pacbio_dataset_consensusreadset-170202_060035178 AND pacbio_dataset_consensusreadset-170202_060035206 AND pacbio_dataset_consensusreadset-170202_060035160 AND pacbio_dataset_consensusreadset-170202_060035159 AND pacbio_dataset_consensusreadset-170202_060045439 AND pacbio_dataset_consensusreadset-170202_060035204 AND pacbio_dataset_consensusreadset-170202_060041703 AND pacbio_dataset_consensusreadset-170202_060035185 AND pacbio_dataset_consensusreadset-170202_06004398 AND pacbio_dataset_consensusreadset-170202_060035225 AND pacbio_dataset_consensusreadset-170202_060045401 AND pacbio_dataset_consensusreadset-170202_06004398 AND pacbio_dataset_consensusreadset-170202_060035204 AND pacbio_dataset_consensusreadset-170202_060044705 AND pacbio_dataset_consensusreadset-170202_060035166 AND pacbio_dataset_consensusreadset-170202_060035286 AND pacbio_dataset_consensusreadset-170202_060035189 AND pacbio_dataset_consensusreadset-170202_060035169 AND pacbio_dataset_consensusreadset-170202_060041666 AND pacbio_dataset_consensusreadset-170202_060035228 AND pacbio_dataset_consensusreadset-170202_060035151",
        "updatedAt": "2017-02-02T06:56:46.940Z",
        "importedAt": "2017-02-02T06:56:46.940Z",
        "path": "/pbi/analysis/smrtlink/release/smrtsuite/userdata/jobs_root/003/003943/tasks/pbcoretools.tasks.gather_ccsset-1/file.consensusreadset.xml",
        "tags": "",
        "uuid": "0e4cb148-7a5e-c98b-c204-a5ac47378e14",
        "totalLength": 0,
        "projectId": 1,
        "numRecords": 204341,
        "version": "3.0.1",
        "id": 5529,
        "md5": "52ebf7c860d94350a4617406ae4ff9dc",
        "jobId": 3943,
        "createdAt": "2017-02-02T06:56:46.940Z",
        "userId": 1,
        "datasetType": "PacBio.DataSet.ConsensusReadSet",
        "comments": "ccs dataset converted",
        "isActive": true
      }
    },
    "ReferenceSetDetails": {
      "type": "object",
      "title": "ReferenceSet Details",
      "description": "Details for a single ReferenceSet",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Dataset name"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Datestamp when database record was last updated"
        },
        "importedAt": {
          "type": "string",
          "title": "Imported At",
          "description": "Date the dataset was imported into SMRT Link"
        },
        "isActive": {
          "default": true,
          "type": "boolean",
          "title": "Is Active",
          "description": "Flag to communicate if the DataSet is active. Soft-deleted DataSets will be marked as in active. In Active datasets will not be returned by default."
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Dataset XML path"
        },
        "ploidy": {
          "type": "string",
          "title": "Path",
          "description": "Ploidy of genome sequence",
          "example": "haploid"
        },
        "tags": {
          "type": "string",
          "title": "Tags",
          "description": "Comma-separated list of tags"
        },
        "uuid": {
          "type": "string",
          "title": "UUID",
          "description": "Unique ID"
        },
        "totalLength": {
          "type": "integer",
          "title": "Total Length",
          "description": "Sum of lengths of all records (usually the total number of bases)"
        },
        "projectId": {
          "type": "integer",
          "title": "Project ID",
          "description": "Project ID associated with this dataset"
        },
        "numRecords": {
          "type": "integer",
          "title": "Number of Records",
          "description": "Number of records in the dataset"
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Dataset version, indicates revisions to the SMRT Link record and/or the XML file"
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Integer ID"
        },
        "md5": {
          "type": "string",
          "title": "MD5",
          "description": "MD5 checksum"
        },
        "jobId": {
          "type": "integer",
          "title": "Job ID",
          "description": "ID of the job that created the database record for thie dataset"
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Datestamp when database record was created"
        },
        "organism": {
          "type": "string",
          "title": "Organism",
          "description": "Source organism name"
        },
        "userId": {
          "type": "integer",
          "title": "User ID",
          "description": "ID of user that created the record"
        },
        "datasetType": {
          "type": "string",
          "title": "Dataset Type",
          "description": "Dataset metatype field",
          "example": "PacBio.DataSet.ReferenceSet"
        },
        "comments": {
          "type": "string",
          "title": "Comments",
          "description": "Miscellaneous comments"
        },
        "parentUuid": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "title": "Parent DataSet UUID",
          "description": "UUID of parent Dataset (if any)"
        },
        "numChildren": {
          "type": "integer",
          "title": "Number of Children",
          "description": "Total Number (active + inactive) Children datasets",
          "default": 0
        }
      },
      "required": [
        "name",
        "updatedAt",
        "importedAt",
        "path",
        "ploidy",
        "tags",
        "uuid",
        "totalLength",
        "projectId",
        "numRecords",
        "version",
        "id",
        "md5",
        "jobId",
        "createdAt",
        "organism",
        "userId",
        "datasetType",
        "comments",
        "isActive",
        "numChildren"
      ],
      "example": {
        "name": "lambdaNEB",
        "updatedAt": "2016-02-02T22:26:22.168Z",
        "importedAt": "2016-02-02T22:34:38.534Z",
        "path": "/pbi/analysis/smrtlink/release/smrtsuite/current/bundles/smrtinub/current/private/pacbio/canneddata/referenceset/lambdaNEB/referenceset.xml",
        "ploidy": "haploid",
        "tags": "",
        "uuid": "1a369917-507e-4f70-9f38-69614ff828b6",
        "totalLength": 48502,
        "projectId": 1,
        "numRecords": 1,
        "version": "3.0.1",
        "id": 1,
        "md5": "4861bca63e02aa26c92724febb3299c2",
        "jobId": 1,
        "createdAt": "2016-02-02T22:26:22.168Z",
        "organism": "lambdaNEB",
        "userId": 1,
        "datasetType": "PacBio.DataSet.ReferenceSet",
        "comments": "reference dataset comments",
        "isActive": true
      }
    },
    "GmapReferenceSetDetails": {
      "type": "object",
      "title": "GmapReferenceSet Details",
      "description": "Details for a single GmapReferenceSet",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Dataset name"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Datestamp when database record was last updated"
        },
        "importedAt": {
          "type": "string",
          "title": "Imported At",
          "description": "Date the dataset was imported into SMRT Link"
        },
        "isActive": {
          "default": true,
          "type": "boolean",
          "title": "Is Active",
          "description": "Flag to communicate if the DataSet is active. Soft-deleted DataSets will be marked as in active. In Active datasets will not be returned by default."
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Dataset XML path"
        },
        "ploidy": {
          "type": "string",
          "title": "Path",
          "description": "Ploidy of genome sequence"
        },
        "tags": {
          "type": "string",
          "title": "Tags",
          "description": "Comma separated tag(s)"
        },
        "uuid": {
          "type": "string",
          "title": "UUID",
          "description": "Unique ID"
        },
        "totalLength": {
          "type": "integer",
          "title": "Total Length",
          "description": "Sum of lengths of all records (usually the total number of bases)"
        },
        "projectId": {
          "type": "integer",
          "title": "Project ID",
          "description": "Project ID associated with this dataset"
        },
        "numRecords": {
          "type": "integer",
          "title": "Number of Records",
          "description": "Number of records in the dataset"
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Dataset version, indicates revisions to the SMRT Link record and/or the XML file"
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Id of DataSet"
        },
        "md5": {
          "type": "string",
          "title": "MD5",
          "description": "MD5 checksum"
        },
        "jobId": {
          "type": "integer",
          "title": "Job ID",
          "description": "ID of the job that created the database record for thie dataset"
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Datestamp when database record was created"
        },
        "organism": {
          "type": "string",
          "title": "Organism",
          "description": "Source organism name"
        },
        "userId": {
          "type": "integer",
          "title": "User ID",
          "description": "ID of user that created the record"
        },
        "datasetType": {
          "type": "string",
          "title": "Dataset Type",
          "description": "Dataset metatype field",
          "example": "PacBio.DataSet.GmapReferenceSet"
        },
        "comments": {
          "type": "string",
          "title": "Comments",
          "description": "Miscellaneous comments"
        },
        "parentUuid": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "title": "Parent DataSet UUID",
          "description": "UUID of parent Dataset (if any)"
        },
        "numChildren": {
          "type": "integer",
          "title": "Number of Children",
          "description": "Total Number (active + inactive) Children datasets",
          "default": 0
        }
      },
      "required": [
        "name",
        "updatedAt",
        "importedAt",
        "path",
        "ploidy",
        "tags",
        "uuid",
        "totalLength",
        "projectId",
        "numRecords",
        "version",
        "id",
        "md5",
        "jobId",
        "createdAt",
        "organism",
        "userId",
        "datasetType",
        "comments",
        "isActive",
        "numChildren"
      ],
      "example": {
        "name": "hg38",
        "updatedAt": "2016-11-30T22:04:01.317Z",
        "path": "/pbi/dept/secondary/siv/testdata/isoseq/gmapreferences/hg38/hg38/gmapreferenceset.xml",
        "ploidy": "",
        "tags": "",
        "uuid": "8207511e-8be8-4935-89f3-49ccfa2516ba",
        "totalLength": -1085681191,
        "projectId": 1,
        "numRecords": 455,
        "version": "3.0.1",
        "id": 3297,
        "md5": "8072374d09f6b4ef48f362f051b62f2b",
        "jobId": 1781,
        "createdAt": "2016-11-30T22:04:01.317Z",
        "organism": "hg38",
        "userId": 1,
        "datasetType": "PacBio.DataSet.GmapReferenceSet",
        "comments": "reference dataset comments",
        "isActive": true
      }
    },
    "Manifests": {
      "type": "array",
      "title": "List of Manifest",
      "description": "List of PacBio Manifest Instances used in SMRT Link System",
      "items": {
        "$ref": "#/definitions/Manifest"
      }
    },
    "Manifest": {
      "type": "object",
      "title": "Manifest",
      "description": "Manifest of software package used in SMRT Link",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of software package"
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description of software package"
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Software version"
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Internal id for software package"
        },
        "dependencies": {
          "type": "array",
          "title": "Dependencies",
          "description": "Package dependencies",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "description",
        "version",
        "id",
        "dependencies"
      ],
      "example": {
        "name": "pbtranscript",
        "description": "pbtranscript",
        "version": "https://github.com/PacificBiosciences/pbtranscript/tree/7dac953c85ff8b3043f224a1cfa1c4f386259f8d",
        "id": "smrttools-pbtranscript",
        "dependencies": []
      }
    },
    "RunCreate": {
      "description": "Request to create an instrument run record",
      "properties": {
        "dataModel": {
          "type": "string",
          "title": "Run XML",
          "description": "XML representation of run data model"
        }
      }
    },
    "RunSummary": {
      "type": "object",
      "title": "Run summary",
      "description": "Summary of instrument run transferred to smrtlink",
      "properties": {
        "reserved": {
          "type": "boolean",
          "title": "Reserved",
          "description": "Flag for runs reserved for an instrument"
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Run Name"
        },
        "instrumentName": {
          "type": "string",
          "title": "Instrument Name",
          "description": "Name of Instrument used"
        },
        "context": {
          "type": "string",
          "title": "Context",
          "description": "Automatically generated run ID with encoded timestamp",
          "example": "r54001_20180101_120000"
        },
        "instrumentSwVersion": {
          "type": "string",
          "title": "Software version of instrument",
          "description": "Name of software package"
        },
        "numCellsCompleted": {
          "type": "integer",
          "title": "Number of cells completed in run",
          "description": "Name of software package"
        },
        "totalCells": {
          "type": "integer",
          "title": "Total Number of Cells",
          "description": "Total number of cells in run"
        },
        "primaryAnalysisSwVersion": {
          "type": "string",
          "title": "Primary Analysis SW Version",
          "description": "Primary Analysis SW Version used to analyze run data"
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Current Run Status"
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Time run was created"
        },
        "createdBy": {
          "type": "string",
          "title": "Created By",
          "description": "User name"
        },
        "numCellsFailed": {
          "type": "integer",
          "title": "Number of cells that failed in run",
          "description": "Name of software package"
        },
        "instrumentSerialNumber": {
          "type": "string",
          "title": "Instrument Serial Number",
          "description": "Serial number of instrument used for run"
        },
        "uniqueId": {
          "type": "string",
          "title": "Unique ID",
          "description": "Run UUID"
        },
        "summary": {
          "type": "string",
          "title": "Summary",
          "description": "Run Summary"
        },
        "multiJobId": {
          "default": null,
          "type": [
            "integer",
            "null"
          ],
          "title": "MultiJob Id",
          "description": "Multi-Job Id if configured to run Analysis jobs when the Run collections/subreadsets has successfully been imported into SL"
        }
      },
      "required": [
        "reserved",
        "name",
        "instrumentName",
        "context",
        "instrumentSwVersion",
        "numCellsCompleted",
        "totalCells",
        "primaryAnalysisSwVersion",
        "status",
        "createdAt",
        "createdBy",
        "numCellsFailed",
        "instrumentSerialNumber",
        "uniqueId",
        "summary"
      ],
      "example": {
        "reserved": false,
        "name": "54136_DryRun_2Cells_20161213_F",
        "instrumentName": "",
        "context": "DefaultTimeStampedRunName",
        "instrumentSwVersion": "String",
        "numCellsCompleted": 0,
        "totalCells": 2,
        "primaryAnalysisSwVersion": "String",
        "status": "Ready",
        "chipType": "1mChip",
        "createdAt": "2016-12-13T19:11:54.086Z",
        "createdBy": "unknown",
        "numCellsFailed": 0,
        "instrumentSerialNumber": "",
        "uniqueId": "9f9b5dcf-d1af-4943-9e88-3f5ff00952b5",
        "summary": "DryRun_2Cells"
      }
    },
    "RunSummarys": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RunSummary"
      }
    },
    "Run": {
      "allOf": [
        {
          "$ref": "#/definitions/RunSummary"
        },
        {
          "type": "object",
          "required": [
            "dataModel"
          ],
          "properties": {
            "dataModel": {
              "type": "string",
              "title": "Run XML",
              "description": "XML representation of run data model"
            }
          }
        }
      ]
    },
    "RunUpdate": {
      "description": "Request to update an existing run",
      "properties": {
        "dataModel": {
          "type": "string",
          "title": "Run XML",
          "description": "XML representation of run data model"
        },
        "reserved": {
          "type": "boolean",
          "title": "Reserved",
          "description": "Flag for reserved run"
        }
      }
    },
    "CollectionDetails": {
      "type": "object",
      "title": "Collection Details",
      "description": "Details of a single collection",
      "properties": {
        "name": {
          "type": "string",
          "title": "Collection Name",
          "description": "Collection name"
        },
        "instrumentName": {
          "type": "string",
          "title": "Instrument Name",
          "description": "Name of instrument the collection was run on"
        },
        "well": {
          "type": "string",
          "title": "Well",
          "description": "Well ID"
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Run status of collection"
        },
        "instrumentId": {
          "type": "string",
          "title": "Instrument ID",
          "description": "Instrument ID of the collection ran on"
        },
        "startedAt": {
          "type": "string",
          "title": "Run Start Time",
          "description": "Run start time of collection"
        },
        "uniqueId": {
          "type": "string",
          "title": "Collection UUID",
          "description": "Collection UUID"
        },
        "collectionPathUri": {
          "type": "string",
          "title": "Collection Path URI",
          "description": "Collection Path URI"
        },
        "runId": {
          "type": "string",
          "title": "Run UUID",
          "description": "Run UUID of collection"
        },
        "movieMinutes": {
          "type": "integer",
          "title": "Movie Minutes",
          "description": "Duration of collection movie in minutes"
        }
      },
      "required": [
        "name",
        "instrumentName",
        "well",
        "status",
        "instrumentId",
        "startedAt",
        "uniqueId",
        "collectionPathUri",
        "runId",
        "movieMinutes"
      ],
      "example": {
        "name": "DryRun_1stCell",
        "instrumentName": "",
        "well": "A01",
        "status": "Ready",
        "instrumentId": "",
        "startedAt": "0001-01-01T08:00:00.000Z",
        "uniqueId": "c93b843f-e534-4d15-a8b2-d6866b17eb70",
        "collectionPathUri": "",
        "runId": "9f9b5dcf-d1af-4943-9e88-3f5ff00952b5",
        "movieMinutes": 5
      }
    },
    "CollectionsDetails": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CollectionDetails"
      }
    },
    "SmrtServerStatus": {
      "type": "object",
      "title": "SMRT Server Status",
      "description": "An summary of the SMRT Server instance, current state and status.",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Server UUID",
          "description": "UUID of SMRT Server instance"
        },
        "version": {
          "type": "string",
          "title": "SMRT Analysis Services Version",
          "description": "The Version of the SMRT Analysis Services Version. Note, this is not the SMRT Link System version. See services/manifests to see details."
        },
        "id": {
          "type": "string",
          "title": "SMRT Server Type Id",
          "description": "SMRT Server Type Id"
        },
        "uptime": {
          "type": "integer",
          "format": "int64",
          "title": "Uptime",
          "description": "Uptime of the Server (in milliseconds)"
        },
        "message": {
          "type": "string",
          "title": "Status Message",
          "description": "SMRT Analysis Service message status."
        },
        "user": {
          "type": "string",
          "title": "User",
          "description": "User that the SMRT Analysis Services are launched by"
        }
      },
      "required": [
        "uuid",
        "version",
        "id",
        "uptime",
        "message",
        "user"
      ],
      "example": {
        "uuid": "8da44054-4013-420d-b547-d11a892fe7bb",
        "version": "0.3.0-bbcc1b5",
        "id": "smrtlink_analysis",
        "uptime": 210242144,
        "message": "Services have been up for 58 hours, 24 minutes and 2.144 seconds.",
        "user": "tesla"
      }
    },
    "SmrtServerError": {
      "type": "object",
      "title": "SMRT Server Error Message",
      "description": "Detailed error message from SMRT Server",
      "properties": {
        "httpCode": {
          "type": "integer",
          "title": "HttpCode",
          "description": "Returned HTTP Code. For non successful return codes, the SMRT Server will return a JSON body with error details"
        },
        "message": {
          "type": "string",
          "title": "Error Message",
          "description": "Detailed Error Message Details"
        },
        "errorType": {
          "type": "string",
          "title": "ErrorType",
          "description": "Error Type"
        }
      },
      "required": [
        "httpCode",
        "message",
        "errorType"
      ],
      "example": {
        "httpCode": 404,
        "message": "Unable to find JobId 66666",
        "errorType": "Not Found"
      }
    },
    "ServiceJob": {
      "type": "object",
      "title": "SMRT Server Job",
      "description": "SMRT Server Job data model",
      "properties": {
        "name": {
          "type": "string",
          "title": "Job Name",
          "description": "Name of the SMRT Link Job"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Datetime of when the job was last updated."
        },
        "jobUpdatedAt": {
          "type": "string",
          "title": "Job Execution Last Updated At",
          "description": "Datetime of when the job execution was last updated."
        },
        "importedAt": {
          "type": [
            "null",
            "string"
          ],
          "title": "Imported At",
          "description": "Imported Date of the Job (if job was imported, otherwise will be null)"
        },
        "path": {
          "type": "string",
          "title": "Job Path",
          "description": "Absolute path on the file system to the SMRT Link Job"
        },
        "state": {
          "type": "string",
          "title": "State",
          "description": "Current SMRT Link Service Job state"
        },
        "uuid": {
          "type": "string",
          "title": "UUID",
          "description": "Globally UUID unique identifier for the job"
        },
        "jobTypeId": {
          "type": "string",
          "title": "JobTypeId",
          "description": "SMRT Link Server Job Type Id (e.g., pbsmrtpipe, import-dataset, merge-dataset)."
        },
        "id": {
          "type": "integer",
          "title": "Id",
          "description": "Integer Id of the SMRT Link job"
        },
        "smrtlinkVersion": {
          "type": [
            "null",
            "string"
          ],
          "title": "SMRT Link System Version",
          "description": "SMRT Link System Version used to run the SMRT Link job. For 'old' SMRT Link instances, the job version will be set to 0.0.0"
        },
        "comment": {
          "type": "string",
          "title": "Comment",
          "description": "Comment/Description of Job"
        },
        "createdAt": {
          "type": "string",
          "title": "CreatedAt.",
          "description": "When the SMRT Link job was created at"
        },
        "isActive": {
          "type": "boolean",
          "title": "IsActive",
          "description": "If the Job is inactive, it will be displayed in the SL UI"
        },
        "createdBy": {
          "type": [
            "null",
            "string"
          ],
          "title": "CreatedBy",
          "description": "User that created the SMRT Link job"
        },
        "createdByEmail": {
          "type": [
            "null",
            "string"
          ],
          "title": "Created By Email",
          "description": "Email of the User that created the SMRT Link job"
        },
        "jsonSettings": {
          "type": "string",
          "title": "Input Settings of Job",
          "description": "Input setting of the Job as JSON String. Each job type (e.g., pbsmrtpipe, merge-dataset) will contain a different schema."
        },
        "errorMessage": {
          "type": [
            "null",
            "string"
          ],
          "title": "Error Message",
          "description": "Summary Error message of the job if in a FAILED state"
        },
        "projectId": {
          "type": "integer",
          "title": "Project Id",
          "description": "Project Id the job is assigned to. Project Id=1 is the 'General Project' accessible by all users"
        },
        "isMultiJob": {
          "default": false,
          "type": "boolean",
          "title": "Is MultiJob",
          "description": "If the Job is a MultiJob type"
        },
        "parentMultiJobId": {
          "default": null,
          "type": [
            "null",
            "integer"
          ],
          "title": "Parent MultiJob Id",
          "description": "If a 'core' job and is assigned to a MultiJob, this is the parent Multi-Job Id"
        },
        "workflow": {
          "default": "{}",
          "type": "string",
          "title": "MultiJob Workflow State",
          "description": "If a MultiJOb, this is the workflow state of the MultiJob that is persisted"
        },
        "tags": {
          "type": "string",
          "title": "Tags",
          "description": "Tags for the dataset. These should be ',' separated values"
        },
        "subJobTypeId": {
          "type": [
            "string",
            "null"
          ],
          "title": "SubJobTypeId",
          "default": null,
          "description": "The Job 'sub job type id'. This could be used to communicate a specific job type of the 'root' jobTypeId. For pbsmrtpipe/analysis jobs, the pipeline id is used."
        }
      },
      "required": [
        "name",
        "updatedAt",
        "jobUpdatedAt",
        "path",
        "state",
        "uuid",
        "jobTypeId",
        "id",
        "smrtlinkVersion",
        "comment",
        "createdAt",
        "createdByEmail",
        "isActive",
        "createdBy",
        "jsonSettings",
        "isMultiJob",
        "workflow",
        "tags"
      ],
      "example": {
        "name": "Job import-dataset",
        "updatedAt": "2016-11-23T08:57:25.150Z",
        "path": "/pbi/dept/secondary/siv/smrtlink/smrtlink-alpha/smrtsuite_170220/userdata/jobs_root/001/001767",
        "state": "FAILED",
        "uuid": "20c97477-8b7d-4dbb-9303-beee979aaabc",
        "smrtlinkToolsVersion": "3.2.0.187062",
        "jobTypeId": "import-dataset",
        "id": 1767,
        "smrtlinkVersion": "3.2.0.187079",
        "comment": "Importing DataSet",
        "createdAt": "2016-11-23T08:55:10.786Z",
        "isActive": true,
        "createdBy": "ralph",
        "jsonSettings": "{\"path\":\"/pbi/collections/242/2420325/r54124_20161109_021915/2_B01/m54124_161109_093303.subreadset.xml\",\"datasetType\":\"PacBio.DataSet.SubreadSet\"}"
      }
    },
    "ServiceJobs": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ServiceJob"
      }
    },
    "SmrtLinkEvent": {
      "type": "object",
      "properties": {
        "uuid": {
          "title": "UUID of Event",
          "description": "Globally unique id of the event",
          "type": "string"
        },
        "createdAt": {
          "title": "Created At",
          "description": "TimeStamp when the Event was created",
          "type": "string"
        },
        "eventTypeId": {
          "title": "Event Type Id",
          "description": "Event Type Id. This must be globally unique",
          "type": "string"
        },
        "eventTypeVersion": {
          "title": "Event Type Version",
          "description": "Schema version for eventTypeId",
          "type": "integer"
        },
        "message": {
          "title": "JSON Message",
          "description": "Message schema corresponding to the evenTypeId and eventTypeVersion",
          "type": "object"
        }
      },
      "required": [
        "uuid",
        "createdAt",
        "eventTypeId",
        "eventTypeVersion",
        "message"
      ],
      "example": {
        "uuid": "83927d00-f46c-11e6-9f9b-3c15c2cc8f88",
        "createdAt": "2017-02-16T08:36:21.082-08:00",
        "eventTypeId": "smrtlink_job_change_state",
        "eventTypeVersion": 1,
        "message": {
          "jobId": 1234,
          "jobTypeId": "pbsmrtpipe",
          "state": "SUCCCESSFUL"
        }
      }
    },
    "SmrtLinkSystemEvent": {
      "type": "object",
      "title": "SMRT Link System Event",
      "properties": {
        "smrtLinkId": {
          "title": "UUID of SMRT Link System",
          "description": "Unique of Smrt Link System (currently UUID)",
          "type": "string"
        },
        "uuid": {
          "title": "UUID of Event",
          "description": "Globally unique id of the event",
          "type": "string"
        },
        "createdAt": {
          "title": "Created At",
          "description": "TimeStamp when the Event was created",
          "type": "string"
        },
        "eventTypeId": {
          "title": "Event Type Id",
          "description": "Event Type Id. This must be globally unique",
          "type": "string"
        },
        "eventTypeVersion": {
          "title": "Event Type Version",
          "description": "Schema version for eventTypeId",
          "type": "integer"
        },
        "message": {
          "title": "JSON Message",
          "description": "Message schema corresponding to the evenTypeId and eventTypeVersion",
          "type": "object"
        }
      },
      "required": [
        "uuid",
        "createdAt",
        "eventTypeId",
        "eventTypeVersion",
        "message"
      ],
      "example": {
        "smrtLinkId": "972c5bbe-f94a-11e6-b5cd-3c15c2cc8f88",
        "uuid": "83927d00-f46c-11e6-9f9b-3c15c2cc8f88",
        "createdAt": "2017-02-16T08:36:21.082-08:00",
        "eventTypeId": "smrtlink_job_change_state",
        "eventTypeVersion": 1,
        "message": {
          "jobId": 1234,
          "jobTypeId": "pbsmrtpipe",
          "state": "SUCCCESSFUL"
        }
      }
    },
    "PacBioDataBundle": {
      "properties": {
        "createdBy": {
          "description": "Author of the PacBio Data Bundle",
          "title": "Author",
          "type": "string"
        },
        "importedAt": {
          "description": "When the PacBio Data Bundle was imported at",
          "title": "Imported At",
          "type": "string"
        },
        "isActive": {
          "default": false,
          "description": "Get the activation status of PacBio Data Bundle",
          "title": "Is Active",
          "type": "boolean"
        },
        "typeId": {
          "description": "Bundle Type Id",
          "title": "Bundle Type",
          "type": "string"
        },
        "version": {
          "description": "Bundle Version. This should adhere to the SemVer to ensure consistent sorting of Data Bundles by Version",
          "title": "Version",
          "type": "string"
        }
      },
      "required": [
        "importedAt",
        "version",
        "isActive",
        "createdBy",
        "typeId"
      ],
      "example": {
        "createdBy": "build",
        "importedAt": "2017-03-28T13:16:15.048Z",
        "isActive": true,
        "typeId": "chemistry",
        "version": "4.0.0"
      },
      "type": "object"
    },
    "PacBioDataBundleList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PacBioDataBundle"
      },
      "example": [
        {
          "createdBy": "build",
          "importedAt": "2017-03-28T13:16:15.048Z",
          "isActive": true,
          "typeId": "chemistry",
          "version": "4.0.0"
        },
        {
          "createdBy": "mkocher",
          "importedAt": "2017-03-28T13:16:15.062Z",
          "isActive": false,
          "typeId": "chemistry",
          "version": "4.1.0"
        }
      ]
    },
    "ProjectRequestUser": {
      "properties": {
        "projectId": {
          "type": "integer",
          "title": "Project ID"
        },
        "login": {
          "type": "string",
          "title": "Login name"
        },
        "role": {
          "type": "string",
          "title": "User role"
        }
      }
    },
    "RequestId": {
      "properties": {
        "id": {
          "type": "integer"
        }
      }
    },
    "ProjectRequest": {
      "properties": {
        "name": {
          "type": "string",
          "title": "Project name"
        },
        "description": {
          "type": "string",
          "title": "Project description"
        },
        "state": {
          "type": "string",
          "title": "Project state"
        },
        "grantRoleToAll": {
          "type": "string",
          "title": "Default user access"
        },
        "datasets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestId"
          }
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectRequestUser"
          }
        }
      }
    },
    "Project": {
      "properties": {
        "id": {
          "type": "integer",
          "title": "Project ID"
        },
        "name": {
          "type": "string",
          "title": "Project name"
        },
        "description": {
          "type": "string",
          "title": "Project description"
        },
        "createdAt": {
          "type": "string",
          "title": "Creation time"
        },
        "updatedAt": {
          "type": "string",
          "title": "Last updated"
        },
        "isActive": {
          "type": "boolean",
          "title": "Active project",
          "description": "Flag indicating whether project is in use"
        },
        "grantRoleToAll": {
          "type": "string"
        }
      }
    },
    "FullProject": {
      "allOf": [
        {
          "$ref": "#/definitions/Project"
        },
        {
          "type": "object",
          "properties": {
            "datasets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataSetMetaDataSet"
              }
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectRequestUser"
              }
            }
          }
        }
      ]
    },
    "PacBioBundleRecord": {
      "properties": {
        "url": {
          "description": "URL to PacBio Data Bundle accessible by SL Server. This must be .tar.gz, or tgz file",
          "title": "URL of TGZ file",
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "type": "object",
      "example": {
        "url": "file:///home/UNIXHOME/mkocher/chemistry-tests/chemistry-9.8.7.tar.gz"
      }
    },
    "PipelineOption": {
      "type": "object",
      "description": "Defines a pbsmrtpipe pipeline option",
      "properties": {
        "id": {
          "type": "string",
          "title": "Option Global ID",
          "description": "Globally Unique identifier of task or workflow option. Examples: pbsmrtpipe.task_options.alpha, pbsmrtpipe.options.beta"
        },
        "optionTypeId": {
          "type": "string",
          "title": "Option type",
          "description": "Option type ID, from restricted list",
          "enum": [
            "integer",
            "string",
            "float",
            "boolean",
            "choice_string",
            "choice_integer",
            "choice_float"
          ]
        },
        "name": {
          "type": "string",
          "title": "Display name",
          "description": "Display name"
        },
        "description": {
          "type": "string",
          "title": "Help text",
          "description": "Help text"
        }
      }
    },
    "PipelineEntryPoint": {
      "type": "object",
      "description": "Defines a required entry point for a pbsmrtpipe pipeline",
      "properties": {
        "entryId": {
          "type": "string",
          "title": "Entry point ID",
          "description": "Identifier of entry point, specific to pipeline",
          "example": "eid_subread"
        },
        "fileTypeId": {
          "type": "string",
          "title": "File type ID",
          "description": "File type identifier, usually prefixed by PacBio.DataSet",
          "example": "PacBio.DataSet.SubreadSet"
        },
        "name": {
          "type": "string",
          "title": "Entry point name",
          "description": "Entry point name"
        }
      }
    },
    "ResolvedPipelineTemplate": {
      "type": "object",
      "description": "Defines a pbsmrtpipe pipeline",
      "properties": {
        "id": {
          "type": "string",
          "title": "Pipeline ID",
          "description": "ID of pbsmrtpipe pipeline",
          "example": "pbsmrtpipe.pipelines.sa3_sat"
        },
        "name": {
          "type": "string",
          "title": "Pipeline name",
          "description": "Pipeline display name"
        },
        "description": {
          "type": "string",
          "title": "Pipeline description",
          "description": "Help text"
        },
        "entryPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineEntryPoint"
          },
          "title": "Dataset entry point"
        },
        "taskOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineOption"
          },
          "title": "Task options",
          "description": "Pipeline-specific task options"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags",
          "description": "Tags associated with a pipeline (e.g. 'dev', 'internal', 'assembly')"
        },
        "version": {
          "type": "string",
          "title": "Pipeline version",
          "description": "Pipeline version"
        }
      }
    },
    "ResolvedPipelineTemplates": {
      "description": "List of pipeline templates",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ResolvedPipelineTemplate"
      }
    },
    "ServiceOption": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Option Global ID",
          "description": "Globally Unique identifier of task or workflow option. Examples: pbsmrtpipe.task_options.alpha, pbsmrtpipe.options.beta"
        },
        "optionTypeId": {
          "type": "string",
          "title": "Option type",
          "description": "Option type ID, from restricted list",
          "enum": [
            "integer",
            "string",
            "float",
            "boolean",
            "choice_string",
            "choice_integer",
            "choice_float"
          ]
        },
        "value": {
          "type": [
            "string",
            "integer",
            "number",
            "boolean"
          ],
          "title": "Option value",
          "description": "User-supplied value"
        }
      }
    },
    "BoundServiceEntryPoint": {
      "type": "object",
      "properties": {
        "entryId": {
          "type": "string",
          "title": "Entry point ID",
          "description": "Identifier of entry point, specific to pipeline",
          "example": "eid_subread"
        },
        "fileTypeId": {
          "type": "string",
          "title": "File type ID",
          "description": "File type identifier, usually prefixed by PacBio.DataSet",
          "example": "PacBio.DataSet.SubreadSet"
        },
        "datasetId": {
          "type": [
            "integer",
            "string"
          ],
          "title": "Dataset ID",
          "description": "Either an integer ID or UUID of existing dataset"
        }
      }
    },
    "PbSmrtPipeServiceOptions": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Job name",
          "description": "User-provided job name"
        },
        "pipelineId": {
          "type": "string",
          "title": "Pipeline ID",
          "description": "ID of pbsmrtpipe pipeline to execute",
          "example": "pbsmrtpipe.pipelines.sa3_sat"
        },
        "entryPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoundServiceEntryPoint"
          },
          "title": "Dataset entry point"
        },
        "taskOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOption"
          },
          "title": "Task options",
          "description": "Pipeline-specific task options"
        },
        "workflowOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOption"
          },
          "title": "Workflow options",
          "description": "Global workflow settings - CURRENTLY IGNORED"
        },
        "projectId": {
          "type": "integer",
          "default": 1,
          "title": "Project ID",
          "description": "Optional project ID"
        }
      }
    },
    "DataSetMergeServiceOptions": {
      "type": "object",
      "properties": {
        "datasetType": {
          "type": "string",
          "example": "PacBio.DataSet.SubreadSet",
          "title": "Dataset metatype",
          "description": "File metatype string, prefixied by PacBio.DataSet"
        },
        "ids": {
          "type": "array",
          "title": "Dataset IDs",
          "description": "Integer IDs of datasets in SMRT Link database",
          "items": {
            "type": "integer"
          }
        },
        "name": {
          "type": "string",
          "title": "Merged dataset name",
          "description": "Name of merged dataset"
        }
      }
    },
    "DeleteJobServiceOptions": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "integer",
          "title": "Job ID",
          "description": "ID of job to delete"
        },
        "removeFiles": {
          "type": "boolean",
          "default": false,
          "title": "Remove files",
          "description": "Remove entire job output directory"
        },
        "dryRun": {
          "type": "boolean",
          "default": false,
          "title": "Dry run",
          "description": "Check whether a job can be deleted, without changing anything"
        },
        "force": {
          "type": "boolean",
          "default": false,
          "title": "Force delete",
          "description": "Force job removal even if it is still running or other jobs depend on it"
        }
      }
    },
    "ImportDataSetOptions": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Dataset path",
          "description": "Path to dataset XML file"
        },
        "datasetType": {
          "type": "string",
          "example": "PacBio.DataSet.SubreadSet",
          "title": "Dataset metatype",
          "description": "File metatype string, prefixied by PacBio.DataSet"
        },
        "projectId": {
          "type": "integer",
          "default": 1,
          "title": "Project ID",
          "description": "ID of project associated with the imported dataset"
        }
      }
    },
    "ImportDataSetsZipOptions": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Dataset path",
          "description": "Path to dataset(s) XML Zip file"
        },
        "projectId": {
          "type": "integer",
          "default": 1,
          "title": "Project ID",
          "description": "ID of project associated with the imported dataset"
        }
      }
    },
    "ConvertImportFastaBarcodesOptions": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "FASTA path",
          "description": "Path to FASTA file to convert to BarcodeSet"
        },
        "name": {
          "type": "string",
          "title": "BarcodeSet name",
          "description": "Name of imported dataset"
        },
        "projectId": {
          "type": "integer",
          "default": 1,
          "title": "Project ID",
          "description": "ID of project associated with the imported dataset"
        }
      }
    },
    "ConvertImportFastaOptions": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "FASTA path",
          "description": "Path to FASTA file to convert to ReferenceSet"
        },
        "name": {
          "type": "string",
          "title": "ReferenceSet name",
          "description": "Name of imported dataset"
        },
        "ploidy": {
          "type": "string",
          "title": "Ploidy",
          "description": "Ploidy of imported genome",
          "example": "haploid"
        },
        "organism": {
          "type": "string",
          "title": "Organism name",
          "description": "Organism name",
          "example": "Homo sapiens"
        },
        "projectId": {
          "type": "integer",
          "default": 1,
          "title": "Project ID",
          "description": "ID of project associated with the imported dataset"
        }
      }
    },
    "MovieMetadataToHdfSubreadOptions": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Metadata XML path",
          "description": "Path to RS II movie metadata XML file"
        },
        "name": {
          "type": "string",
          "title": "HdfSubreadSet name",
          "description": "Name of imported dataset"
        },
        "projectId": {
          "type": "integer",
          "default": 1,
          "title": "Project ID",
          "description": "ID of project associated with the imported dataset"
        }
      }
    },
    "ImportDataStoreOptions": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Datastore JSON",
          "description": "Path to datastore.json"
        },
        "projectId": {
          "type": "integer",
          "default": 1,
          "title": "Project ID",
          "description": "ID of project associated with the imported datastore files"
        }
      }
    },
    "DataSetExportServiceOptions": {
      "type": "object",
      "properties": {
        "datasetType": {
          "type": "string",
          "example": "PacBio.DataSet.SubreadSet",
          "title": "Dataset metatype",
          "description": "File metatype string, prefixed by PacBio.DataSet"
        },
        "ids": {
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "example": [
            1,
            2,
            3,
            4
          ],
          "title": "Dataset IDs",
          "description": "Integer IDs of datasets in SMRT Link database (total number of datasets must be <= 10)",
          "items": {
            "type": "integer"
          }
        },
        "outputPath": {
          "type": "string",
          "title": "Output ZIP file",
          "description": "Path to output ZIP file containing datasets, must not already exist"
        },
        "deleteAfterExport": {
          "type": [
            "boolean",
            "null"
          ],
          "default": false,
          "title": "Delete datasets after exporting",
          "description": "If the export is successful and this option is true, a separate job will be started asynchronously to delete the exported datasets"
        }
      }
    },
    "ExportSmrtLinkJobOptions": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "example": [
            1,
            2,
            3,
            4
          ],
          "minItems": 1,
          "maxItems": 5,
          "title": "Job IDs",
          "description": "Integer IDs or UUIDs of jobs in SMRT Link database ((total number of Jobs must be <= 5)",
          "items": {
            "type": [
              "integer",
              "string"
            ]
          }
        },
        "outputPath": {
          "type": "string",
          "title": "Output directory",
          "description": "Path to output ZIP files containing jobs (must be writable)"
        },
        "includeEntryPoints": {
          "type": "boolean",
          "default": false,
          "title": "Include Entry Points",
          "description": "Include input datasets in exported ZIP files"
        }
      }
    },
    "ImportSmrtLinkJobOptions": {
      "type": "object",
      "properties": {
        "zipPath": {
          "type": "string",
          "title": "ZIP file",
          "description": "ZIP file of exported SMRT Link job"
        },
        "mockJobId": {
          "type": [
            "boolean",
            "null"
          ],
          "title": "Mock unique IDs",
          "description": "If present, UUIDs for the job and its datastore files will be mocked to facilitate export/import testing on the same system"
        }
      }
    },
    "DataSetDeleteServiceOptions": {
      "type": "object",
      "properties": {
        "datasetType": {
          "type": "string",
          "example": "PacBio.DataSet.SubreadSet",
          "title": "Dataset metatype",
          "description": "File metatype string, prefixied by PacBio.DataSet"
        },
        "ids": {
          "type": "array",
          "title": "Dataset IDs",
          "description": "Integer IDs of datasets in SMRT Link database",
          "items": {
            "type": "integer"
          }
        },
        "removeFiles": {
          "type": "boolean",
          "default": true,
          "title": "Remove files",
          "description": "Remove dataset XML and external resource files"
        }
      }
    },
    "DataSetFilterProperty": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Property name",
          "example": "length"
        },
        "operator": {
          "type": "string",
          "title": "Operator",
          "description": "Comparison operator",
          "example": ">="
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "Comparison value",
          "example": "1000"
        }
      }
    },
    "DataSetFilter": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DataSetFilterProperty"
      }
    },
    "CopyDataSetJobOptions": {
      "type": "object",
      "properties": {
        "datasetId": {
          "type": [
            "integer",
            "string"
          ],
          "title": "Dataset ID",
          "description": "Dataset ID"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSetFilter"
          },
          "description": "List of dataset filters"
        },
        "name": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "title": "Output dataset name",
          "description": "Output dataset name"
        },
        "description": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "title": "Output description (unused)",
          "description": "Output dataset description (unused)"
        },
        "projectId": {
          "type": [
            "integer",
            "null"
          ],
          "default": 1,
          "title": "Project ID",
          "description": "Project ID"
        }
      }
    },
    "TsJobBundleJobServiceOptions": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "integer",
          "title": "Job ID",
          "description": "ID of job to send to PacBio tech support"
        },
        "user": {
          "type": "string",
          "title": "User ID",
          "description": "ID of user requesting tech support"
        },
        "comment": {
          "type": "string",
          "title": "User comments",
          "description": "User-provided description of the problem"
        }
      }
    },
    "TsSystemStatusServiceOptions": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "User ID",
          "description": "ID of user requesting tech support"
        },
        "comment": {
          "type": "string",
          "title": "User comments",
          "description": "User-provided description of the problem"
        }
      }
    },
    "DbBackUpServiceJobOptions": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "User ID",
          "description": "ID of user requesting tech support"
        },
        "comment": {
          "type": "string",
          "title": "User comments",
          "description": "User-provided description of the problem"
        }
      }
    },
    "Sample": {
      "type": "object",
      "description": "Representation of an existing sample record",
      "properties": {
        "details": {
          "type": "string",
          "title": "Sample details",
          "description": "Sample details"
        },
        "uniqueId": {
          "type": "string",
          "title": "Sample ID",
          "description": "UUID of the sample record"
        },
        "name": {
          "type": "string",
          "title": "Sample name",
          "description": "Sample display name"
        },
        "createdBy": {
          "type": "string",
          "title": "Created by",
          "description": "User login ID"
        },
        "createdAt": {
          "type": "string",
          "title": "Created at",
          "description": "Timestamp of record creation"
        }
      }
    },
    "Samples": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Sample"
      }
    },
    "SampleCreate": {
      "type": "object",
      "description": "Request to create a new sample record",
      "properties": {
        "details": {
          "type": "string",
          "title": "Sample details",
          "description": "Sample details"
        },
        "uniqueId": {
          "type": "string",
          "title": "Sample ID",
          "description": "UUID of the sample record"
        },
        "name": {
          "type": "string",
          "title": "Sample name",
          "description": "Sample display name"
        }
      }
    },
    "SampleUpdate": {
      "type": "object",
      "description": "Request to update an existing sample record",
      "properties": {
        "details": {
          "type": "string",
          "title": "Sample details",
          "description": "Sample details"
        },
        "name": {
          "type": "string",
          "title": "Sample name",
          "description": "Sample display name"
        }
      }
    },
    "PipelineDatastoreFileRule": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "File label"
        },
        "fileTypeId": {
          "type": "string",
          "title": "File metatype",
          "example": "PacBio.FileTypes.JsonReport"
        },
        "description": {
          "type": "string"
        },
        "isHidden": {
          "type": "boolean"
        },
        "sourceId": {
          "type": "string",
          "example": "pbreports.tasks.ccs_report-out-0"
        }
      }
    },
    "PipelineDatastoreViewRule": {
      "type": "object",
      "properties": {
        "pipelineId": {
          "type": "string",
          "example": "pbsmrtpipe.pipelines.sa3_ds_barcode_ccs",
          "title": "Pipeline ID"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineDatastoreFileRule"
          }
        },
        "smrtlinkVersion": {
          "type": "string",
          "title": "SMRT Link version"
        }
      }
    },
    "PipelineDatastoreViewRules": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PipelineDatastoreViewRule"
      }
    },
    "JobType": {
      "type": "object",
      "properties": {
        "jobTypeId": {
          "type": "string",
          "title": "Job type ID",
          "example": "pbsmrtpipe"
        },
        "description": {
          "type": "string",
          "title": "Job type description",
          "example": "Run a pbsmrtpipe analysis job"
        }
      }
    },
    "JobTypes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/JobType"
      }
    },
    "DataStoreFile": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "File UUID",
          "description": "Unique identifier associated with a file; for datasets and reports, this should be identical to the UUID recorded in the file itself"
        },
        "fileTypeId": {
          "type": "string",
          "title": "File type ID",
          "description": "PacBio file metatype",
          "example": "PacBio.DataSet.SubreadSet"
        },
        "sourceId": {
          "type": "string",
          "title": "Source ID",
          "description": "ID of the task that created the file",
          "example": "pbcoretools.tasks.filterdataset"
        },
        "fileSize": {
          "type": "integer",
          "title": "File size",
          "description": "File size in bytes"
        },
        "createdAt": {
          "type": "string",
          "title": "Created at",
          "description": "Timestamp for file creation"
        },
        "modifiedAt": {
          "type": "string",
          "title": "Modified at",
          "description": "Timestamp for file modification"
        },
        "importAt": {
          "type": "string",
          "title": "Imported at",
          "description": "Timestamp for file import"
        },
        "path": {
          "type": "string",
          "title": "File path"
        },
        "jobId": {
          "type": "integer",
          "title": "Job ID"
        },
        "jobUUID": {
          "type": "string",
          "title": "Job UUID"
        },
        "name": {
          "type": "string",
          "title": "File label"
        },
        "description": {
          "type": "string",
          "title": "File description"
        },
        "isActive": {
          "type": "boolean",
          "title": "Active file",
          "description": "Flag indicating whether file has been hard- or soft-deleted"
        }
      }
    },
    "DataStoreFiles": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DataStoreFile"
      }
    },
    "DataStoreReportFile": {
      "type": "object",
      "properties": {
        "reportTypeId": {
          "type": "string",
          "title": "Report ID",
          "example": "pbreports.tasks.sat_report"
        },
        "dataStoreFile": {
          "$ref": "#/definitions/DataStoreFile"
        }
      }
    },
    "DataStoreReportFiles": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DataStoreReportFile"
      }
    },
    "EngineJobEntryPoint": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "integer",
          "title": "Job ID"
        },
        "datasetUUID": {
          "type": "string",
          "title": "Dataset UUID"
        },
        "datasetType": {
          "type": "string",
          "title": "Dataset MetaType",
          "example": "PacBio.DataSet.SubreadSet"
        }
      }
    },
    "EngineJobEntryPoints": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/EngineJobEntryPoint"
      }
    },
    "ClientLogMessage": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string",
          "title": "log level",
          "enum": [
            "TRACE",
            "DEBUG",
            "INFO",
            "WARN",
            "ERROR",
            "CRITICAL",
            "FATAL"
          ]
        },
        "message": {
          "type": "string",
          "title": "log message"
        },
        "sourceId": {
          "type": "string",
          "title": "source of the log message"
        }
      }
    },
    "MessageResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "message"
        }
      }
    },
    "AlarmStatus": {
      "properties": {
        "id": {
          "description": "SMRT Link System Alarm Id.",
          "title": "Alarm Id",
          "type": "string"
        },
        "message": {
          "description": "Details of the Alarm Status",
          "title": "Message Details",
          "type": [
            "null",
            "string"
          ]
        },
        "severity": {
          "default": "CLEAR",
          "description": "An explanation about the purpose of this instance.",
          "title": "Severity",
          "type": "string",
          "enum": [
            "CLEAR",
            "WARN",
            "ERROR",
            "CRITICAL",
            "FATAL",
            "FATAL_IMMEDIATE"
          ]
        },
        "value": {
          "description": "Computed value of severity",
          "title": "Value",
          "type": "number"
        },
        "updatedAt": {
          "description": "Time when the Alarm Status was computed",
          "title": "Updated At",
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "id",
        "message",
        "severity",
        "value"
      ],
      "example": {
        "updatedAt": "2017-07-11T14:59:27.364Z",
        "id": "smrtlink.alarms.job_dir",
        "value": 0.78,
        "message": "Job dir is 78% full.",
        "severity": "CLEAR"
      }
    },
    "ListAlarmStatus": {
      "description": "A List of SMRT Link System Status Instances",
      "type": "array",
      "items": {
        "$ref": "#/definitions/AlarmStatus"
      }
    },
    "DeferredEntryPoint": {
      "type": "object",
      "properties": {
        "entryId": {
          "description": "Pipeline Entry Point binding id (Example eid_subread)",
          "title": "EntryPoint",
          "type": "string"
        },
        "fileTypeId": {
          "description": "File type id for the binding entry point(Example: PacBio.DataSet.SubreadSet) ",
          "title": "File Type Id",
          "type": "string"
        },
        "uuid": {
          "description": "UUID of Entry Point. This does NOT need to be currently resolvable in the system.",
          "title": "File UUID",
          "type": "string"
        }
      }
    },
    "DeferredJob": {
      "description": "A model for creating Deferred jobs that when the entry points all resolvable, the analysis job(s) will be created.",
      "properties": {
        "description": {
          "description": "Description of the Job. This will be used to create the analysis job",
          "title": "Deferred Analysis Job Description",
          "type": "string"
        },
        "entryPoints": {
          "description": "List of EntryPoint to",
          "items": {
            "$ref": "#/definitions/DeferredEntryPoint"
          },
          "type": "array"
        },
        "name": {
          "description": "Job Name",
          "title": "Job Name",
          "type": "string"
        },
        "pipelineId": {
          "description": "Pipeline Id (Example: pbsmrtpipe.pipelines.dev_01_ds)",
          "title": "Pipeline Id",
          "type": "string"
        },
        "projectId": {
          "default": 1,
          "description": "Associate a Multi-Job with a Project",
          "title": "Project Id",
          "type": "integer"
        },
        "taskOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOption"
          },
          "title": "Task options",
          "description": "Pipeline-specific task options"
        },
        "workflowOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOption"
          },
          "title": "Pipeline Engine options",
          "description": "Pipeline Engine options (May not be used or supported. The System global settings will be used)"
        }
      },
      "type": "object",
      "required": [
        "entryPoints",
        "pipelineId",
        "taskOptions",
        "workflowOptions",
        "name",
        "projectId"
      ],
      "example": {
        "description": "A MultiAnalysis Example Job",
        "name": "An example MultiJob",
        "projectId": 1,
        "jobs": [
          {
            "entryPoints": [
              {
                "fileTypeId": "PacBio.DataSet.SubreadSet",
                "uuid": "47919a2d-2d6e-4499-863c-67b0433e6a2a",
                "entryId": "eid_subread"
              }
            ],
            "pipelineId": "pbsmrtpipe.pipelines.dev_01_ds",
            "taskOptions": [],
            "workflowOptions": [],
            "name": "Job 1",
            "description": "Job 1 description",
            "projectId": 1
          },
          {
            "entryPoints": [
              {
                "fileTypeId": "PacBio.DataSet.SubreadSet",
                "uuid": "af916621-ab06-46cc-94f2-bc922c48b277",
                "entryId": "eid_subread"
              }
            ],
            "pipelineId": "pbsmrtpipe.pipelines.dev_01_ds",
            "taskOptions": [],
            "workflowOptions": [],
            "name": "Job 1",
            "description": "Job 1 description",
            "projectId": 1
          }
        ]
      }
    },
    "MultiAnalysisJobOptions": {
      "type": "object",
      "description": "Multi-Analysis Job creation interface. SMRT Link will poll for the entry points to be resolved, then create the analysis jobs and poll for a terminal state.",
      "properties": {
        "jobs": {
          "description": "List of Deferred Job",
          "items": {
            "$ref": "#/definitions/DeferredJob"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of the MultiJob",
          "title": "Description",
          "type": "string"
        },
        "name": {
          "description": "Job Name",
          "title": "Job Name",
          "type": "string"
        },
        "projectId": {
          "default": 1,
          "description": "Associate a Multi-Job with a Project",
          "title": "Project Id",
          "type": "integer"
        },
        "submit": {
          "default": false,
          "description": "Automatically submit the job upon creation. This will yield the job uneditable.",
          "title": "Submit",
          "type": [
            "null",
            "boolean"
          ]
        }
      }
    },
    "DataSetUpdateRequest": {
      "type": "object",
      "description": "Encapsulates multiple independent update parameters, all optional",
      "properties": {
        "isActive": {
          "description": "If False, set dataset to inactive (hidden)",
          "type": [
            "string",
            "null"
          ],
          "title": "Is active"
        },
        "bioSampleName": {
          "description": "Applies to SubreadSets only",
          "type": [
            "string",
            "null"
          ],
          "title": "Biological sample name"
        }
      }
    },
    "EulaUpdateRecord": {
      "type": "object",
      "description": "Update the configuration (enable install & job metrics) of the Eula",
      "properties": {
        "enableInstallMetrics": {
          "type": [
            "boolean",
            "null"
          ],
          "example": true,
          "default": true,
          "title": "Enable Install Metrics",
          "description": "If true, permits collection of non-proprietary information about the SMRT Link installation"
        },
        "enableJobMetrics": {
          "type": [
            "boolean",
            "null"
          ],
          "example": true,
          "default": true,
          "title": "Enable Job Metrics",
          "description": "If true, permits collection of non-proprietary information about all new and previously run analysis jobs"
        }
      }
    },
    "UserAgreement": {
      "type": "object",
      "description": "Record of user agreement to (or rejection of) SMRT Link feedback terms",
      "properties": {
        "user": {
          "type": "string",
          "title": "User ID",
          "description": "Login ID of user"
        },
        "acceptedAt": {
          "type": "string",
          "title": "Accepted at",
          "description": "Datestamp of user response"
        },
        "smrtlinkVersion": {
          "type": "string",
          "title": "SMRT Link Version",
          "description": "Version string of SMRT Link to which the agreement applies"
        },
        "osVersion": {
          "type": "string",
          "title": "OS Version",
          "description": "Operating system version of SMRT Link server (determined automatically)"
        },
        "enableInstallMetrics": {
          "type": "boolean",
          "title": "Enable Install Metrics",
          "description": "If true, permits collection of non-proprietary information about the SMRT Link installation"
        },
        "enableJobMetrics": {
          "type": "boolean",
          "title": "Enable Job Metrics",
          "description": "If true, permits collection of non-proprietary information about all new and previously run analysis jobs"
        }
      }
    },
    "UserAgreements": {
      "title": "List of user agreement records",
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserAgreement"
      }
    },
    "UserAgreementAcceptance": {
      "type": "object",
      "description": "Submit user response to agreement for collection of non-proprietary metrics by PacBio Tech Support",
      "properties": {
        "user": {
          "type": "string",
          "title": "User ID",
          "description": "Login ID of user"
        },
        "enableInstallMetrics": {
          "type": "boolean",
          "title": "Enable Install Metrics",
          "description": "If true, permits collection of non-proprietary information about the SMRT Link installation. This enables users to trigger Tech Support system status and failed jobs to PacBio."
        },
        "enableJobMetrics": {
          "type": "boolean",
          "title": "Enable Job Metrics",
          "description": "If true, permits collection of non-proprietary information about previously run analysis jobs and newly created analysis jobs to automatically be sent to PacBio upon job completion."
        }
      }
    },
    "UserRecord": {
      "type": "object",
      "description": "Information about an authenticated user",
      "properties": {
        "userId": {
          "type": "string",
          "title": "User ID",
          "description": "Login ID of user"
        },
        "userEmail": {
          "type": [
            "string",
            "null"
          ],
          "title": "User email",
          "description": "User email address"
        },
        "firstName": {
          "type": [
            "string",
            "null"
          ],
          "title": "First name",
          "description": "First name"
        },
        "lastName": {
          "type": [
            "string",
            "null"
          ],
          "title": "Last name",
          "description": "Last name"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "User roles",
          "description": "SMRT Link user roles"
        }
      }
    },
    "JobTask": {
      "type": "object",
      "description": "Holds state of a pbsmrtpipe job task",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Unique ID",
          "description": "Globally unique ID for task"
        },
        "jobId": {
          "type": "integer",
          "title": "Job ID",
          "description": "ID of service job"
        },
        "taskId": {
          "type": "string",
          "title": "Task ID",
          "description": "Task ID (unique in the context of a single job)"
        },
        "taskTypeId": {
          "type": "string",
          "title": "Task type ID",
          "description": "pbsmrtpipe tool contract ID or similar"
        },
        "name": {
          "type": "string",
          "title": "Task name",
          "description": "Task name"
        },
        "state": {
          "type": "string",
          "title": "Task state",
          "description": "Task state",
          "example": "CREATED"
        },
        "createdAt": {
          "type": "string",
          "title": "Created at",
          "description": "Created at timestamp"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated at",
          "description": "Updated at timestamp"
        },
        "errorMessage": {
          "type": [
            "string",
            "null"
          ],
          "title": "Error message",
          "description": "Optional error message"
        }
      }
    },
    "JobTasks": {
      "description": "List of job task records",
      "type": "array",
      "items": {
        "$ref": "#/definitions/JobTask"
      }
    },
    "CreateJobTaskRecord": {
      "type": "object",
      "description": "Request to create a new job task",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Unique ID",
          "description": "Globally unique ID for task"
        },
        "taskId": {
          "type": "string",
          "title": "Task ID",
          "description": "Task ID (unique in the context of a single job)"
        },
        "taskTypeId": {
          "type": "string",
          "title": "Task type ID",
          "description": "pbsmrtpipe tool contract ID or similar"
        },
        "name": {
          "type": "string",
          "title": "Task name",
          "description": "Task name"
        },
        "createdAt": {
          "type": "string",
          "title": "Created at",
          "description": "Created at timestamp"
        }
      }
    },
    "UpdateJobTaskRecord": {
      "type": "object",
      "description": "Request to update an existing job task",
      "properties": {
        "uuid": {
          "type": "string",
          "title": "Unique ID",
          "description": "Globally unique ID of task"
        },
        "state": {
          "type": "string",
          "title": "Task state",
          "description": "Task state",
          "example": "CREATED"
        },
        "message": {
          "type": "string",
          "title": "Message",
          "description": "Task message"
        },
        "errorMessage": {
          "type": [
            "string",
            "null"
          ],
          "title": "Error message",
          "description": "Optional error message"
        }
      }
    },
    "JobEvent": {
      "type": "object",
      "description": "Event associated with a job",
      "properties": {
        "eventId": {
          "type": "string",
          "title": "Event ID",
          "description": "Globally unique event ID"
        },
        "jobId": {
          "type": "integer",
          "title": "Job ID",
          "description": "Job ID"
        },
        "state": {
          "type": "string",
          "title": "Job state",
          "description": "Job state associated with event",
          "example": "CREATED"
        },
        "message": {
          "type": "string",
          "title": "Message",
          "description": "Message associated with the event"
        },
        "eventTypeId": {
          "type": "string",
          "title": "Event type",
          "description": "Event type"
        }
      }
    },
    "UpdateJobRecord": {
      "type": "object",
      "description": "Update job record fields",
      "properties": {
        "name": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "title": "Job name",
          "description": "New job name (optional)"
        },
        "comment": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "title": "Job comments",
          "description": "New job comments (optional)"
        }
      }
    },
    "RegistryResource": {
      "type": "object",
      "description": "Registry service resource",
      "properties": {
        "createdAt": {
          "type": "string",
          "title": "Created at",
          "description": "Created at timestamp"
        },
        "uuid": {
          "type": "string",
          "title": "Unique ID",
          "description": "Resource UUID"
        },
        "host": {
          "type": "string",
          "title": "Host name",
          "description": "Resource hostname"
        },
        "port": {
          "type": "integer",
          "title": "Port number",
          "description": "Resource port number"
        },
        "resourceId": {
          "type": "string",
          "title": "Resource ID",
          "description": "Resource ID"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated at",
          "description": "Updated at timestamp"
        }
      }
    },
    "RegistryResources": {
      "title": "List of registry service resources",
      "type": "array",
      "items": {
        "$ref": "#/definitions/RegistryResource"
      }
    },
    "RegistryResourceCreate": {
      "type": "object",
      "description": "Registry service resource creation request",
      "properties": {
        "host": {
          "type": "string",
          "title": "Host name",
          "description": "Resource hostname"
        },
        "port": {
          "type": "integer",
          "title": "Port number",
          "description": "Resource port number"
        },
        "resourceId": {
          "type": "string",
          "title": "Resource ID",
          "description": "Resource ID"
        }
      }
    },
    "RegistryResourceUpdate": {
      "type": "object",
      "description": "Registry service update request",
      "properties": {
        "host": {
          "type": [
            "string",
            "null"
          ],
          "title": "Host name",
          "description": "Resource hostname",
          "default": null
        },
        "port": {
          "type": [
            "integer",
            "null"
          ],
          "title": "Port number",
          "description": "Resource port number",
          "default": null
        }
      }
    }
  }
}
