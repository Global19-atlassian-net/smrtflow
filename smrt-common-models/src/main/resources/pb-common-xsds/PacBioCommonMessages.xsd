<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="xs3p.xsl"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://pacificbiosciences.com/PacBioCommonMessages.xsd"
           targetNamespace="http://pacificbiosciences.com/PacBioCommonMessages.xsd" elementFormDefault="qualified"
           attributeFormDefault="unqualified">

    <!--

    version 0.1.0

    This is base message that all types should use.

    source -> dest

    Trying to separate and be clear about where the UniqueId is generated.

    General design model: Only use elements. Follow the BaseEntity capitalization name convention
    -->
    <xs:complexType name="BaseMessageType" abstract="true">
        <xs:sequence>
            <xs:element name="UniqueId">
                <xs:simpleType>
                    <xs:restriction base="xs:ID">
                        <xs:pattern value="[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="Message" type="xs:string"/>
            <xs:element name="SourceId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Message with source createdAt timestamp -->
    <xs:complexType name="CreatedAtMessageType" abstract="true">
        <xs:complexContent>
            <xs:extension base="BaseMessageType">
                <xs:sequence>
                    <xs:element name="CreatedAt" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Log message source created at</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--
    To generate the proper java class this requires
    a log type to be defined, then an element that
    extends that type (below).
    -->
    <xs:complexType name="LogMessageType" abstract="true">
        <xs:complexContent>
            <xs:extension base="CreatedAtMessageType">
                <xs:sequence>
                    <xs:element name="Level" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Log Level</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="ThreadId" type="xs:string" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Thread or Process Id</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element name="Context" type="xs:string" minOccurs="1">
                        <xs:annotation>
                            <xs:documentation>General Context information</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- This will be an separate Java class -->
    <xs:element name="LogMessage">
        <xs:annotation>
            <xs:documentation>Log Message Instance.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="LogMessageType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    
    <!-- Heartbeat Message -->
    <xs:complexType name="HeartBeatType" abstract="true">
        <xs:complexContent>
            <xs:extension base="BaseMessageType"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="HeartBeatMessage">
        <xs:annotation>
            <xs:documentation>Heart Message to communicate the process/tool is running.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="HeartBeatType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <!-- General Status Message -->
    <xs:complexType name="StatusMessageType">
        <xs:complexContent>
            <xs:extension base="CreatedAtMessageType">
                <xs:sequence>
                    <!-- this needs to be enum-ed -->
                    <xs:element name="status" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="StatusMessage">
        <xs:annotation>
            <xs:documentation>Status/Progress Message to communicate the process status of tool/process</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="StatusMessageType"/>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>



</xs:schema>
