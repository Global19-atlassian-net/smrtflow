//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: XXX
//


package com.pacificbiosciences.pacbiobasedatamodel;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SupportedFilterOperators.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SupportedFilterOperators">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="=="/>
 *     &lt;enumeration value="="/>
 *     &lt;enumeration value="eq"/>
 *     &lt;enumeration value="!="/>
 *     &lt;enumeration value="ne"/>
 *     &lt;enumeration value=">="/>
 *     &lt;enumeration value="gte"/>
 *     &lt;enumeration value="&lt;="/>
 *     &lt;enumeration value="lte"/>
 *     &lt;enumeration value=">"/>
 *     &lt;enumeration value="gt"/>
 *     &lt;enumeration value="&lt;"/>
 *     &lt;enumeration value="lt"/>
 *     &lt;enumeration value="in"/>
 *     &lt;enumeration value="not_in"/>
 *     &lt;enumeration value="&amp;"/>
 *     &lt;enumeration value="~"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "SupportedFilterOperators")
@XmlEnum
public enum SupportedFilterOperators {

    @XmlEnumValue("==")
    EQ2("=="),
    @XmlEnumValue("=")
    EQ3("="),
    @XmlEnumValue("eq")
    EQ("eq"),
    @XmlEnumValue("!=")
    NE2("!="),
    @XmlEnumValue("ne")
    NE("ne"),
    @XmlEnumValue(">=")
    GE2(">="),
    @XmlEnumValue("gte")
    GTE("gte"),
    @XmlEnumValue("<=")
    LE2("<="),
    @XmlEnumValue("lte")
    LTE("lte"),
    @XmlEnumValue(">")
    GT2(">"),
    @XmlEnumValue("gt")
    GT("gt"),
    @XmlEnumValue("<")
    LT2("<"),
    @XmlEnumValue("lt")
    LT("lt"),
    @XmlEnumValue("in")
    IN("in"),
    @XmlEnumValue("not_in")
    NOT_IN("not_in"),
    @XmlEnumValue("&")
    AMP("&"),
    @XmlEnumValue("~")
    APPROX_EQ("~");
    private final String value;

    SupportedFilterOperators(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SupportedFilterOperators fromValue(String v) {
        for (SupportedFilterOperators c: SupportedFilterOperators.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
