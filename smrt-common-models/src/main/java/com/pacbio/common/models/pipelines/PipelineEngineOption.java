/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.pacbio.common.models.pipelines;  
@SuppressWarnings("all")
/** Pipeline Level option. This should probably be converted to concrete values, not loose key-value pairs */
@org.apache.avro.specific.AvroGenerated
public class PipelineEngineOption extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PipelineEngineOption\",\"namespace\":\"com.pacbio.common.models.pipelines\",\"doc\":\"Pipeline Level option. This should probably be converted to concrete values, not loose key-value pairs\",\"fields\":[{\"name\":\"default\",\"type\":[\"int\",\"string\",\"boolean\",\"float\"]},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"optionTypeId\",\"type\":\"string\",\"doc\":\"Explicit pacbio option type id (e.g., pacbio.option_types.boolean). This must be consistent with the 'type' field\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Object default$;
  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence description;
  /** Explicit pacbio option type id (e.g., pacbio.option_types.boolean). This must be consistent with the 'type' field */
  @Deprecated public java.lang.CharSequence optionTypeId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PipelineEngineOption() {}

  /**
   * All-args constructor.
   */
  public PipelineEngineOption(java.lang.Object default$, java.lang.CharSequence id, java.lang.CharSequence name, java.lang.CharSequence description, java.lang.CharSequence optionTypeId) {
    this.default$ = default$;
    this.id = id;
    this.name = name;
    this.description = description;
    this.optionTypeId = optionTypeId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return default$;
    case 1: return id;
    case 2: return name;
    case 3: return description;
    case 4: return optionTypeId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: default$ = (java.lang.Object)value$; break;
    case 1: id = (java.lang.CharSequence)value$; break;
    case 2: name = (java.lang.CharSequence)value$; break;
    case 3: description = (java.lang.CharSequence)value$; break;
    case 4: optionTypeId = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'default$' field.
   */
  public java.lang.Object getDefault$() {
    return default$;
  }

  /**
   * Sets the value of the 'default$' field.
   * @param value the value to set.
   */
  public void setDefault$(java.lang.Object value) {
    this.default$ = value;
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'optionTypeId' field.
   * Explicit pacbio option type id (e.g., pacbio.option_types.boolean). This must be consistent with the 'type' field   */
  public java.lang.CharSequence getOptionTypeId() {
    return optionTypeId;
  }

  /**
   * Sets the value of the 'optionTypeId' field.
   * Explicit pacbio option type id (e.g., pacbio.option_types.boolean). This must be consistent with the 'type' field   * @param value the value to set.
   */
  public void setOptionTypeId(java.lang.CharSequence value) {
    this.optionTypeId = value;
  }

  /** Creates a new PipelineEngineOption RecordBuilder */
  public static com.pacbio.common.models.pipelines.PipelineEngineOption.Builder newBuilder() {
    return new com.pacbio.common.models.pipelines.PipelineEngineOption.Builder();
  }
  
  /** Creates a new PipelineEngineOption RecordBuilder by copying an existing Builder */
  public static com.pacbio.common.models.pipelines.PipelineEngineOption.Builder newBuilder(com.pacbio.common.models.pipelines.PipelineEngineOption.Builder other) {
    return new com.pacbio.common.models.pipelines.PipelineEngineOption.Builder(other);
  }
  
  /** Creates a new PipelineEngineOption RecordBuilder by copying an existing PipelineEngineOption instance */
  public static com.pacbio.common.models.pipelines.PipelineEngineOption.Builder newBuilder(com.pacbio.common.models.pipelines.PipelineEngineOption other) {
    return new com.pacbio.common.models.pipelines.PipelineEngineOption.Builder(other);
  }
  
  /**
   * RecordBuilder for PipelineEngineOption instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PipelineEngineOption>
    implements org.apache.avro.data.RecordBuilder<PipelineEngineOption> {

    private java.lang.Object default$;
    private java.lang.CharSequence id;
    private java.lang.CharSequence name;
    private java.lang.CharSequence description;
    private java.lang.CharSequence optionTypeId;

    /** Creates a new Builder */
    private Builder() {
      super(com.pacbio.common.models.pipelines.PipelineEngineOption.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.pacbio.common.models.pipelines.PipelineEngineOption.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.default$)) {
        this.default$ = data().deepCopy(fields()[0].schema(), other.default$);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.optionTypeId)) {
        this.optionTypeId = data().deepCopy(fields()[4].schema(), other.optionTypeId);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PipelineEngineOption instance */
    private Builder(com.pacbio.common.models.pipelines.PipelineEngineOption other) {
            super(com.pacbio.common.models.pipelines.PipelineEngineOption.SCHEMA$);
      if (isValidValue(fields()[0], other.default$)) {
        this.default$ = data().deepCopy(fields()[0].schema(), other.default$);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.optionTypeId)) {
        this.optionTypeId = data().deepCopy(fields()[4].schema(), other.optionTypeId);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'default$' field */
    public java.lang.Object getDefault$() {
      return default$;
    }
    
    /** Sets the value of the 'default$' field */
    public com.pacbio.common.models.pipelines.PipelineEngineOption.Builder setDefault$(java.lang.Object value) {
      validate(fields()[0], value);
      this.default$ = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'default$' field has been set */
    public boolean hasDefault$() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'default$' field */
    public com.pacbio.common.models.pipelines.PipelineEngineOption.Builder clearDefault$() {
      default$ = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'id' field */
    public java.lang.CharSequence getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.pacbio.common.models.pipelines.PipelineEngineOption.Builder setId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'id' field */
    public com.pacbio.common.models.pipelines.PipelineEngineOption.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.pacbio.common.models.pipelines.PipelineEngineOption.Builder setName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'name' field */
    public com.pacbio.common.models.pipelines.PipelineEngineOption.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public com.pacbio.common.models.pipelines.PipelineEngineOption.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.description = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'description' field */
    public com.pacbio.common.models.pipelines.PipelineEngineOption.Builder clearDescription() {
      description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'optionTypeId' field */
    public java.lang.CharSequence getOptionTypeId() {
      return optionTypeId;
    }
    
    /** Sets the value of the 'optionTypeId' field */
    public com.pacbio.common.models.pipelines.PipelineEngineOption.Builder setOptionTypeId(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.optionTypeId = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'optionTypeId' field has been set */
    public boolean hasOptionTypeId() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'optionTypeId' field */
    public com.pacbio.common.models.pipelines.PipelineEngineOption.Builder clearOptionTypeId() {
      optionTypeId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public PipelineEngineOption build() {
      try {
        PipelineEngineOption record = new PipelineEngineOption();
        record.default$ = fieldSetFlags()[0] ? this.default$ : (java.lang.Object) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.description = fieldSetFlags()[3] ? this.description : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.optionTypeId = fieldSetFlags()[4] ? this.optionTypeId : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
